// Mocks generated by Mockito 5.4.2 from annotations
// in nokhte/test/app/core/modules/abort_purpose_session/fixtures/abort_purpose_session_mock_gen.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:nokhte/app/core/error/failure.dart' as _i5;
import 'package:nokhte/app/core/interfaces/logic.dart' as _i6;
import 'package:nokhte/app/core/modules/abort_purpose_session_artifacts/domain/contracts/abort_purpose_session_artifacts_contract.dart'
    as _i3;
import 'package:nokhte/app/core/modules/timer/domain/domain.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AbortPurposeSessionArtifactsContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockAbortPurposeSessionArtifactsContract extends _i1.Mock
    implements _i3.AbortPurposeSessionArtifactsContract {
  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> abortTheCollaboration(
          _i6.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #abortTheCollaboration,
          [params],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #abortTheCollaboration,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, void>>.value(
                _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #abortTheCollaboration,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteSoloDocuments(
          _i6.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSoloDocuments,
          [params],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteSoloDocuments,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, void>>.value(
                _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteSoloDocuments,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteWorkingCollaborativeDocument(
          _i6.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWorkingCollaborativeDocument,
          [params],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteWorkingCollaborativeDocument,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, void>>.value(
                _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteWorkingCollaborativeDocument,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i7.TimerCreationStatusEntity>> createTimer(
          _i7.CreateTimerParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTimer,
          [params],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.Failure, _i7.TimerCreationStatusEntity>>.value(
            _FakeEither_0<_i5.Failure, _i7.TimerCreationStatusEntity>(
          this,
          Invocation.method(
            #createTimer,
            [params],
          ),
        )),
        returnValueForMissingStub: _i4.Future<
                _i2.Either<_i5.Failure, _i7.TimerCreationStatusEntity>>.value(
            _FakeEither_0<_i5.Failure, _i7.TimerCreationStatusEntity>(
          this,
          Invocation.method(
            #createTimer,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.TimerCreationStatusEntity>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i7.PresenceUpdateStatusEntity>> updatePresence(
          bool? isPresent) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePresence,
          [isPresent],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.Failure, _i7.PresenceUpdateStatusEntity>>.value(
            _FakeEither_0<_i5.Failure, _i7.PresenceUpdateStatusEntity>(
          this,
          Invocation.method(
            #updatePresence,
            [isPresent],
          ),
        )),
        returnValueForMissingStub: _i4.Future<
                _i2.Either<_i5.Failure, _i7.PresenceUpdateStatusEntity>>.value(
            _FakeEither_0<_i5.Failure, _i7.PresenceUpdateStatusEntity>(
          this,
          Invocation.method(
            #updatePresence,
            [isPresent],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.PresenceUpdateStatusEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.TimerRunningUpdateStatusEntity>>
      updateTimerRunningStatus(bool? shouldRun) => (super.noSuchMethod(
            Invocation.method(
              #updateTimerRunningStatus,
              [shouldRun],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure,
                        _i7.TimerRunningUpdateStatusEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.TimerRunningUpdateStatusEntity>(
              this,
              Invocation.method(
                #updateTimerRunningStatus,
                [shouldRun],
              ),
            )),
            returnValueForMissingStub: _i4.Future<
                    _i2.Either<_i5.Failure,
                        _i7.TimerRunningUpdateStatusEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.TimerRunningUpdateStatusEntity>(
              this,
              Invocation.method(
                #updateTimerRunningStatus,
                [shouldRun],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.Failure, _i7.TimerRunningUpdateStatusEntity>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i7.TimerDeletionStatusEntity>> deleteTheTimer(
          _i6.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTheTimer,
          [params],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.Failure, _i7.TimerDeletionStatusEntity>>.value(
            _FakeEither_0<_i5.Failure, _i7.TimerDeletionStatusEntity>(
          this,
          Invocation.method(
            #deleteTheTimer,
            [params],
          ),
        )),
        returnValueForMissingStub: _i4.Future<
                _i2.Either<_i5.Failure, _i7.TimerDeletionStatusEntity>>.value(
            _FakeEither_0<_i5.Failure, _i7.TimerDeletionStatusEntity>(
          this,
          Invocation.method(
            #deleteTheTimer,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.TimerDeletionStatusEntity>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i7.TimerMarkdownStatusEntity>> markdownTheTimer(
          _i6.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #markdownTheTimer,
          [params],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.Failure, _i7.TimerMarkdownStatusEntity>>.value(
            _FakeEither_0<_i5.Failure, _i7.TimerMarkdownStatusEntity>(
          this,
          Invocation.method(
            #markdownTheTimer,
            [params],
          ),
        )),
        returnValueForMissingStub: _i4.Future<
                _i2.Either<_i5.Failure, _i7.TimerMarkdownStatusEntity>>.value(
            _FakeEither_0<_i5.Failure, _i7.TimerMarkdownStatusEntity>(
          this,
          Invocation.method(
            #markdownTheTimer,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.TimerMarkdownStatusEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.TimerInformationStreamEntity>>
      getTimerInformationStream(_i6.NoParams? params) => (super.noSuchMethod(
            Invocation.method(
              #getTimerInformationStream,
              [params],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure,
                        _i7.TimerInformationStreamEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.TimerInformationStreamEntity>(
              this,
              Invocation.method(
                #getTimerInformationStream,
                [params],
              ),
            )),
            returnValueForMissingStub: _i4.Future<
                    _i2.Either<_i5.Failure,
                        _i7.TimerInformationStreamEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.TimerInformationStreamEntity>(
              this,
              Invocation.method(
                #getTimerInformationStream,
                [params],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.Failure, _i7.TimerInformationStreamEntity>>);
}
