// Mocks generated by Mockito 5.4.4 from annotations
// in nokhte/test/app/core/modules/voice_call/fixtures/voice_call_mock_gen.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;

import 'package:agora_rtc_engine/agora_rtc_engine.dart' as _i4;
import 'package:dartz/dartz.dart' as _i6;
import 'package:http/http.dart' as _i5;
import 'package:mobx/mobx.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;
import 'package:nokhte/app/core/error/failure.dart' as _i12;
import 'package:nokhte/app/core/interfaces/logic.dart' as _i13;
import 'package:nokhte/app/core/mobx/store_state.dart' as _i16;
import 'package:nokhte/app/core/modules/voice_call/data/sources/voice_call_remote_source.dart'
    as _i9;
import 'package:nokhte/app/core/modules/voice_call/domain/domain.dart' as _i7;
import 'package:nokhte/app/core/modules/voice_call/mobx/main/voice_call_actions_store.dart'
    as _i14;
import 'package:nokhte/app/core/types/types.dart' as _i15;
import 'package:nokhte_backend/tables/existing_collaborations.dart' as _i3;
import 'package:supabase_flutter/supabase_flutter.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSupabaseClient_0 extends _i1.SmartFake
    implements _i2.SupabaseClient {
  _FakeSupabaseClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExistingCollaborationsQueries_1 extends _i1.SmartFake
    implements _i3.ExistingCollaborationsQueries {
  _FakeExistingCollaborationsQueries_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRtcEngine_2 extends _i1.SmartFake implements _i4.RtcEngine {
  _FakeRtcEngine_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_3 extends _i1.SmartFake implements _i5.Response {
  _FakeResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_4<L, R> extends _i1.SmartFake implements _i6.Either<L, R> {
  _FakeEither_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVoiceCallContract_5 extends _i1.SmartFake
    implements _i7.VoiceCallContract {
  _FakeVoiceCallContract_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJoinCall_6 extends _i1.SmartFake implements _i7.JoinCall {
  _FakeJoinCall_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLeaveCall_7 extends _i1.SmartFake implements _i7.LeaveCall {
  _FakeLeaveCall_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMuteLocalAudio_8 extends _i1.SmartFake
    implements _i7.MuteLocalAudio {
  _FakeMuteLocalAudio_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUnmuteLocalAudio_9 extends _i1.SmartFake
    implements _i7.UnmuteLocalAudio {
  _FakeUnmuteLocalAudio_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReactiveContext_10 extends _i1.SmartFake
    implements _i8.ReactiveContext {
  _FakeReactiveContext_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [VoiceCallRemoteSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockVoiceCallRemoteSourceImpl extends _i1.Mock
    implements _i9.VoiceCallRemoteSourceImpl {
  @override
  _i2.SupabaseClient get supabase => (super.noSuchMethod(
        Invocation.getter(#supabase),
        returnValue: _FakeSupabaseClient_0(
          this,
          Invocation.getter(#supabase),
        ),
        returnValueForMissingStub: _FakeSupabaseClient_0(
          this,
          Invocation.getter(#supabase),
        ),
      ) as _i2.SupabaseClient);

  @override
  _i3.ExistingCollaborationsQueries get existingCollaborationsQueries =>
      (super.noSuchMethod(
        Invocation.getter(#existingCollaborationsQueries),
        returnValue: _FakeExistingCollaborationsQueries_1(
          this,
          Invocation.getter(#existingCollaborationsQueries),
        ),
        returnValueForMissingStub: _FakeExistingCollaborationsQueries_1(
          this,
          Invocation.getter(#existingCollaborationsQueries),
        ),
      ) as _i3.ExistingCollaborationsQueries);

  @override
  String get currentUserUID => (super.noSuchMethod(
        Invocation.getter(#currentUserUID),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#currentUserUID),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#currentUserUID),
        ),
      ) as String);

  @override
  int get currentAgoraUID => (super.noSuchMethod(
        Invocation.getter(#currentAgoraUID),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i4.RtcEngine get agoraEngine => (super.noSuchMethod(
        Invocation.getter(#agoraEngine),
        returnValue: _FakeRtcEngine_2(
          this,
          Invocation.getter(#agoraEngine),
        ),
        returnValueForMissingStub: _FakeRtcEngine_2(
          this,
          Invocation.getter(#agoraEngine),
        ),
      ) as _i4.RtcEngine);

  @override
  _i11.Future<_i4.RtcEngine> initAgoraSdk() => (super.noSuchMethod(
        Invocation.method(
          #initAgoraSdk,
          [],
        ),
        returnValue: _i11.Future<_i4.RtcEngine>.value(_FakeRtcEngine_2(
          this,
          Invocation.method(
            #initAgoraSdk,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i4.RtcEngine>.value(_FakeRtcEngine_2(
          this,
          Invocation.method(
            #initAgoraSdk,
            [],
          ),
        )),
      ) as _i11.Future<_i4.RtcEngine>);

  @override
  _i11.Future<_i5.Response> getAgoraToken({required String? channelName}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAgoraToken,
          [],
          {#channelName: channelName},
        ),
        returnValue: _i11.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #getAgoraToken,
            [],
            {#channelName: channelName},
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #getAgoraToken,
            [],
            {#channelName: channelName},
          ),
        )),
      ) as _i11.Future<_i5.Response>);

  @override
  _i11.Future<void> joinCall({
    required String? token,
    required String? channelId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinCall,
          [],
          {
            #token: token,
            #channelId: channelId,
          },
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> leaveCall() => (super.noSuchMethod(
        Invocation.method(
          #leaveCall,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<List<dynamic>> getCollaboratorInfo() => (super.noSuchMethod(
        Invocation.method(
          #getCollaboratorInfo,
          [],
        ),
        returnValue: _i11.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub:
            _i11.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i11.Future<List<dynamic>>);

  @override
  _i11.Future<void> muteLocalAudio() => (super.noSuchMethod(
        Invocation.method(
          #muteLocalAudio,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> unmuteLocalAudio() => (super.noSuchMethod(
        Invocation.method(
          #unmuteLocalAudio,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
}

/// A class which mocks [VoiceCallContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockVoiceCallContract extends _i1.Mock implements _i7.VoiceCallContract {
  @override
  _i11.Future<_i6.Either<_i12.Failure, String>> getAgoraToken(
          {required String? channelName}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAgoraToken,
          [],
          {#channelName: channelName},
        ),
        returnValue: _i11.Future<_i6.Either<_i12.Failure, String>>.value(
            _FakeEither_4<_i12.Failure, String>(
          this,
          Invocation.method(
            #getAgoraToken,
            [],
            {#channelName: channelName},
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i6.Either<_i12.Failure, String>>.value(
                _FakeEither_4<_i12.Failure, String>(
          this,
          Invocation.method(
            #getAgoraToken,
            [],
            {#channelName: channelName},
          ),
        )),
      ) as _i11.Future<_i6.Either<_i12.Failure, String>>);

  @override
  _i11.Future<_i6.Either<_i12.Failure, String>> getChannelId() =>
      (super.noSuchMethod(
        Invocation.method(
          #getChannelId,
          [],
        ),
        returnValue: _i11.Future<_i6.Either<_i12.Failure, String>>.value(
            _FakeEither_4<_i12.Failure, String>(
          this,
          Invocation.method(
            #getChannelId,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i6.Either<_i12.Failure, String>>.value(
                _FakeEither_4<_i12.Failure, String>(
          this,
          Invocation.method(
            #getChannelId,
            [],
          ),
        )),
      ) as _i11.Future<_i6.Either<_i12.Failure, String>>);

  @override
  _i11.Future<_i6.Either<_i12.Failure, _i7.CallStatusEntity>> joinCall(
    String? token,
    String? channelId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinCall,
          [
            token,
            channelId,
          ],
        ),
        returnValue:
            _i11.Future<_i6.Either<_i12.Failure, _i7.CallStatusEntity>>.value(
                _FakeEither_4<_i12.Failure, _i7.CallStatusEntity>(
          this,
          Invocation.method(
            #joinCall,
            [
              token,
              channelId,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i6.Either<_i12.Failure, _i7.CallStatusEntity>>.value(
                _FakeEither_4<_i12.Failure, _i7.CallStatusEntity>(
          this,
          Invocation.method(
            #joinCall,
            [
              token,
              channelId,
            ],
          ),
        )),
      ) as _i11.Future<_i6.Either<_i12.Failure, _i7.CallStatusEntity>>);

  @override
  _i11.Future<_i6.Either<_i12.Failure, _i7.CallStatusEntity>> leaveCall() =>
      (super.noSuchMethod(
        Invocation.method(
          #leaveCall,
          [],
        ),
        returnValue:
            _i11.Future<_i6.Either<_i12.Failure, _i7.CallStatusEntity>>.value(
                _FakeEither_4<_i12.Failure, _i7.CallStatusEntity>(
          this,
          Invocation.method(
            #leaveCall,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i6.Either<_i12.Failure, _i7.CallStatusEntity>>.value(
                _FakeEither_4<_i12.Failure, _i7.CallStatusEntity>(
          this,
          Invocation.method(
            #leaveCall,
            [],
          ),
        )),
      ) as _i11.Future<_i6.Either<_i12.Failure, _i7.CallStatusEntity>>);

  @override
  _i11.Future<_i6.Either<_i12.Failure, bool>> muteLocalAudio() =>
      (super.noSuchMethod(
        Invocation.method(
          #muteLocalAudio,
          [],
        ),
        returnValue: _i11.Future<_i6.Either<_i12.Failure, bool>>.value(
            _FakeEither_4<_i12.Failure, bool>(
          this,
          Invocation.method(
            #muteLocalAudio,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i6.Either<_i12.Failure, bool>>.value(
                _FakeEither_4<_i12.Failure, bool>(
          this,
          Invocation.method(
            #muteLocalAudio,
            [],
          ),
        )),
      ) as _i11.Future<_i6.Either<_i12.Failure, bool>>);

  @override
  _i11.Future<_i6.Either<_i12.Failure, bool>> unmuteLocalAudio() =>
      (super.noSuchMethod(
        Invocation.method(
          #unmuteLocalAudio,
          [],
        ),
        returnValue: _i11.Future<_i6.Either<_i12.Failure, bool>>.value(
            _FakeEither_4<_i12.Failure, bool>(
          this,
          Invocation.method(
            #unmuteLocalAudio,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i6.Either<_i12.Failure, bool>>.value(
                _FakeEither_4<_i12.Failure, bool>(
          this,
          Invocation.method(
            #unmuteLocalAudio,
            [],
          ),
        )),
      ) as _i11.Future<_i6.Either<_i12.Failure, bool>>);

  @override
  _i11.Future<_i4.RtcEngine> initAgoraSdk(_i13.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #initAgoraSdk,
          [params],
        ),
        returnValue: _i11.Future<_i4.RtcEngine>.value(_FakeRtcEngine_2(
          this,
          Invocation.method(
            #initAgoraSdk,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i4.RtcEngine>.value(_FakeRtcEngine_2(
          this,
          Invocation.method(
            #initAgoraSdk,
            [params],
          ),
        )),
      ) as _i11.Future<_i4.RtcEngine>);
}

/// A class which mocks [GetAgoraToken].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAgoraToken extends _i1.Mock implements _i7.GetAgoraToken {
  @override
  _i7.VoiceCallContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeVoiceCallContract_5(
          this,
          Invocation.getter(#contract),
        ),
        returnValueForMissingStub: _FakeVoiceCallContract_5(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i7.VoiceCallContract);

  @override
  _i11.Future<_i6.Either<_i12.Failure, String>> call(
          _i7.GetAgoraTokenParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i11.Future<_i6.Either<_i12.Failure, String>>.value(
            _FakeEither_4<_i12.Failure, String>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i6.Either<_i12.Failure, String>>.value(
                _FakeEither_4<_i12.Failure, String>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i11.Future<_i6.Either<_i12.Failure, String>>);
}

/// A class which mocks [GetChannelId].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetChannelId extends _i1.Mock implements _i7.GetChannelId {
  @override
  _i7.VoiceCallContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeVoiceCallContract_5(
          this,
          Invocation.getter(#contract),
        ),
        returnValueForMissingStub: _FakeVoiceCallContract_5(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i7.VoiceCallContract);

  @override
  _i11.Future<_i6.Either<_i12.Failure, String>> call(_i13.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i11.Future<_i6.Either<_i12.Failure, String>>.value(
            _FakeEither_4<_i12.Failure, String>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i6.Either<_i12.Failure, String>>.value(
                _FakeEither_4<_i12.Failure, String>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i11.Future<_i6.Either<_i12.Failure, String>>);
}

/// A class which mocks [InitAgoraSdk].
///
/// See the documentation for Mockito's code generation for more information.
class MockInitAgoraSdk extends _i1.Mock implements _i7.InitAgoraSdk {
  @override
  _i7.VoiceCallContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeVoiceCallContract_5(
          this,
          Invocation.getter(#contract),
        ),
        returnValueForMissingStub: _FakeVoiceCallContract_5(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i7.VoiceCallContract);

  @override
  _i11.Future<_i4.RtcEngine> call(_i13.NoParams? params) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i11.Future<_i4.RtcEngine>.value(_FakeRtcEngine_2(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i4.RtcEngine>.value(_FakeRtcEngine_2(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i11.Future<_i4.RtcEngine>);
}

/// A class which mocks [JoinCall].
///
/// See the documentation for Mockito's code generation for more information.
class MockJoinCall extends _i1.Mock implements _i7.JoinCall {
  @override
  _i7.VoiceCallContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeVoiceCallContract_5(
          this,
          Invocation.getter(#contract),
        ),
        returnValueForMissingStub: _FakeVoiceCallContract_5(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i7.VoiceCallContract);

  @override
  _i11.Future<_i6.Either<_i12.Failure, _i7.CallStatusEntity>> call(
          _i7.JoinCallParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i11.Future<_i6.Either<_i12.Failure, _i7.CallStatusEntity>>.value(
                _FakeEither_4<_i12.Failure, _i7.CallStatusEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i6.Either<_i12.Failure, _i7.CallStatusEntity>>.value(
                _FakeEither_4<_i12.Failure, _i7.CallStatusEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i11.Future<_i6.Either<_i12.Failure, _i7.CallStatusEntity>>);
}

/// A class which mocks [LeaveCall].
///
/// See the documentation for Mockito's code generation for more information.
class MockLeaveCall extends _i1.Mock implements _i7.LeaveCall {
  @override
  _i7.VoiceCallContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeVoiceCallContract_5(
          this,
          Invocation.getter(#contract),
        ),
        returnValueForMissingStub: _FakeVoiceCallContract_5(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i7.VoiceCallContract);

  @override
  _i11.Future<_i6.Either<_i12.Failure, _i7.CallStatusEntity>> call(
          _i13.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i11.Future<_i6.Either<_i12.Failure, _i7.CallStatusEntity>>.value(
                _FakeEither_4<_i12.Failure, _i7.CallStatusEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i6.Either<_i12.Failure, _i7.CallStatusEntity>>.value(
                _FakeEither_4<_i12.Failure, _i7.CallStatusEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i11.Future<_i6.Either<_i12.Failure, _i7.CallStatusEntity>>);
}

/// A class which mocks [MuteLocalAudio].
///
/// See the documentation for Mockito's code generation for more information.
class MockMuteLocalAudio extends _i1.Mock implements _i7.MuteLocalAudio {
  @override
  _i7.VoiceCallContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeVoiceCallContract_5(
          this,
          Invocation.getter(#contract),
        ),
        returnValueForMissingStub: _FakeVoiceCallContract_5(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i7.VoiceCallContract);

  @override
  _i11.Future<_i6.Either<_i12.Failure, bool>> call(_i13.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i11.Future<_i6.Either<_i12.Failure, bool>>.value(
            _FakeEither_4<_i12.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i6.Either<_i12.Failure, bool>>.value(
                _FakeEither_4<_i12.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i11.Future<_i6.Either<_i12.Failure, bool>>);
}

/// A class which mocks [UnmuteLocalAudio].
///
/// See the documentation for Mockito's code generation for more information.
class MockUnmuteLocalAudio extends _i1.Mock implements _i7.UnmuteLocalAudio {
  @override
  _i7.VoiceCallContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeVoiceCallContract_5(
          this,
          Invocation.getter(#contract),
        ),
        returnValueForMissingStub: _FakeVoiceCallContract_5(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i7.VoiceCallContract);

  @override
  _i11.Future<_i6.Either<_i12.Failure, bool>> call(_i13.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i11.Future<_i6.Either<_i12.Failure, bool>>.value(
            _FakeEither_4<_i12.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i6.Either<_i12.Failure, bool>>.value(
                _FakeEither_4<_i12.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i11.Future<_i6.Either<_i12.Failure, bool>>);
}

/// A class which mocks [VoiceCallActionsStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockVoiceCallActionsStore extends _i1.Mock
    implements _i14.VoiceCallActionsStore {
  @override
  _i7.JoinCall get joinCall => (super.noSuchMethod(
        Invocation.getter(#joinCall),
        returnValue: _FakeJoinCall_6(
          this,
          Invocation.getter(#joinCall),
        ),
        returnValueForMissingStub: _FakeJoinCall_6(
          this,
          Invocation.getter(#joinCall),
        ),
      ) as _i7.JoinCall);

  @override
  _i7.LeaveCall get leaveCall => (super.noSuchMethod(
        Invocation.getter(#leaveCall),
        returnValue: _FakeLeaveCall_7(
          this,
          Invocation.getter(#leaveCall),
        ),
        returnValueForMissingStub: _FakeLeaveCall_7(
          this,
          Invocation.getter(#leaveCall),
        ),
      ) as _i7.LeaveCall);

  @override
  _i7.MuteLocalAudio get muteAudio => (super.noSuchMethod(
        Invocation.getter(#muteAudio),
        returnValue: _FakeMuteLocalAudio_8(
          this,
          Invocation.getter(#muteAudio),
        ),
        returnValueForMissingStub: _FakeMuteLocalAudio_8(
          this,
          Invocation.getter(#muteAudio),
        ),
      ) as _i7.MuteLocalAudio);

  @override
  _i7.UnmuteLocalAudio get unmuteAudio => (super.noSuchMethod(
        Invocation.getter(#unmuteAudio),
        returnValue: _FakeUnmuteLocalAudio_9(
          this,
          Invocation.getter(#unmuteAudio),
        ),
        returnValueForMissingStub: _FakeUnmuteLocalAudio_9(
          this,
          Invocation.getter(#unmuteAudio),
        ),
      ) as _i7.UnmuteLocalAudio);

  @override
  _i15.CallStatus get callStatus => (super.noSuchMethod(
        Invocation.getter(#callStatus),
        returnValue: _i15.CallStatus.initial,
        returnValueForMissingStub: _i15.CallStatus.initial,
      ) as _i15.CallStatus);

  @override
  set callStatus(_i15.CallStatus? value) => super.noSuchMethod(
        Invocation.setter(
          #callStatus,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isMuted => (super.noSuchMethod(
        Invocation.getter(#isMuted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isMuted(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isMuted,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
        returnValueForMissingStub: <Object>[],
      ) as List<Object>);

  @override
  _i16.StoreState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i16.StoreState.initial,
        returnValueForMissingStub: _i16.StoreState.initial,
      ) as _i16.StoreState);

  @override
  set state(_i16.StoreState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  set errorMessage(String? value) => super.noSuchMethod(
        Invocation.setter(
          #errorMessage,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_10(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeReactiveContext_10(
          this,
          Invocation.getter(#context),
        ),
      ) as _i8.ReactiveContext);

  @override
  dynamic audioStateOrErrorUpdater(_i6.Either<_i12.Failure, bool>? result) =>
      super.noSuchMethod(
        Invocation.method(
          #audioStateOrErrorUpdater,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic callStateOrErrorUpdater(
          _i6.Either<_i12.Failure, _i7.CallStatusEntity>? result) =>
      super.noSuchMethod(
        Invocation.method(
          #callStateOrErrorUpdater,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<void> muteOrUnmuteAudio({required bool? wantToMute}) =>
      (super.noSuchMethod(
        Invocation.method(
          #muteOrUnmuteAudio,
          [],
          {#wantToMute: wantToMute},
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> enterOrLeaveCall(
          _i6.Either<_i13.NoParams, _i7.JoinCallParams>? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #enterOrLeaveCall,
          [params],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  String mapFailureToMessage(_i12.Failure? failure) => (super.noSuchMethod(
        Invocation.method(
          #mapFailureToMessage,
          [failure],
        ),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #mapFailureToMessage,
            [failure],
          ),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #mapFailureToMessage,
            [failure],
          ),
        ),
      ) as String);

  @override
  dynamic errorUpdater(_i12.Failure? failure) => super.noSuchMethod(
        Invocation.method(
          #errorUpdater,
          [failure],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stateOrErrorUpdater(_i6.Either<_i12.Failure, dynamic>? result) =>
      super.noSuchMethod(
        Invocation.method(
          #stateOrErrorUpdater,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<void> call(dynamic params) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
}
