// Mocks generated by Mockito 5.4.1 from annotations
// in primala/test/app/core/modules/local_speech_to_text/fixtures/local_speech_to_text_mock_gen.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:primala/app/core/error/failure.dart' as _i5;
import 'package:primala/app/core/interfaces/logic.dart' as _i7;
import 'package:primala/app/core/modules/local_speech_to_text/domain/domain.dart'
    as _i6;

import 'local_speech_to_text_mock_gen.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MLocalSpeechToTextContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockMLocalSpeechToTextContract extends _i1.Mock
    implements _i3.MLocalSpeechToTextContract {
  MockMLocalSpeechToTextContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.AudioProcessingEntity>> processAudio(
          dynamic params) =>
      (super.noSuchMethod(
        Invocation.method(
          #processAudio,
          [params],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.Failure, _i6.AudioProcessingEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.AudioProcessingEntity>(
          this,
          Invocation.method(
            #processAudio,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.AudioProcessingEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.RecordingStatusEntity>> startRecording(
          _i7.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #startRecording,
          [params],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.Failure, _i6.RecordingStatusEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.RecordingStatusEntity>(
          this,
          Invocation.method(
            #startRecording,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.RecordingStatusEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.RecordingStatusEntity>> stopRecording(
          _i7.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #stopRecording,
          [params],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.Failure, _i6.RecordingStatusEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.RecordingStatusEntity>(
          this,
          Invocation.method(
            #stopRecording,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.RecordingStatusEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.InitLeopardStatusEntity>> initLeopard(
          _i7.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #initLeopard,
          [params],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.Failure, _i6.InitLeopardStatusEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.InitLeopardStatusEntity>(
          this,
          Invocation.method(
            #initLeopard,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.InitLeopardStatusEntity>>);
}

/// A class which mocks [MStopRecording].
///
/// See the documentation for Mockito's code generation for more information.
class MockMStopRecording extends _i1.Mock implements _i3.MStopRecording {
  MockMStopRecording() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [MStartRecording].
///
/// See the documentation for Mockito's code generation for more information.
class MockMStartRecording extends _i1.Mock implements _i3.MStartRecording {
  MockMStartRecording() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [MInitLeopard].
///
/// See the documentation for Mockito's code generation for more information.
class MockMInitLeopard extends _i1.Mock implements _i3.MInitLeopard {
  MockMInitLeopard() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [MProcessAudio].
///
/// See the documentation for Mockito's code generation for more information.
class MockMProcessAudio extends _i1.Mock implements _i3.MProcessAudio {
  MockMProcessAudio() {
    _i1.throwOnMissingStub(this);
  }
}
