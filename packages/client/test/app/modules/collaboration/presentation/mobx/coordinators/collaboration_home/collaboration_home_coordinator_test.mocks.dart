// Mocks generated by Mockito 5.4.4 from annotations
// in nokhte/test/app/modules/collaboration/presentation/mobx/coordinators/collaboration_home/collaboration_home_coordinator_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i13;

import 'package:dartz/dartz.dart' as _i11;
import 'package:mobx/mobx.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;
import 'package:nokhte/app/core/error/failure.dart' as _i12;
import 'package:nokhte/app/core/mobx/base_future_store.dart' as _i6;
import 'package:nokhte/app/core/mobx/store_state.dart' as _i9;
import 'package:nokhte/app/core/modules/user_information/mobx/mobx.dart' as _i4;
import 'package:nokhte/app/core/widgets/widgets.dart' as _i2;
import 'package:nokhte/app/modules/collaboration/domain/domain.dart' as _i5;
import 'package:nokhte/app/modules/collaboration/presentation/mobx/coordinators/collaboration_home/collaboration_home_screen_widgets_coordinator.dart'
    as _i7;
import 'package:nokhte/app/modules/collaboration/presentation/mobx/main/enter_collaborator_pool_store.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBeachWavesStore_0 extends _i1.SmartFake
    implements _i2.BeachWavesStore {
  _FakeBeachWavesStore_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGradientTreeNodeStore_1 extends _i1.SmartFake
    implements _i2.GradientTreeNodeStore {
  _FakeGradientTreeNodeStore_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSmartTextStore_2 extends _i1.SmartFake
    implements _i2.SmartTextStore {
  _FakeSmartTextStore_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWifiDisconnectOverlayStore_3 extends _i1.SmartFake
    implements _i2.WifiDisconnectOverlayStore {
  _FakeWifiDisconnectOverlayStore_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGestureCrossStore_4 extends _i1.SmartFake
    implements _i2.GestureCrossStore {
  _FakeGestureCrossStore_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReactiveContext_5 extends _i1.SmartFake
    implements _i3.ReactiveContext {
  _FakeReactiveContext_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetUserInfoStore_6 extends _i1.SmartFake
    implements _i4.GetUserInfoStore {
  _FakeGetUserInfoStore_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateHasGoneThroughInvitationFlowStore_7 extends _i1.SmartFake
    implements _i4.UpdateHasGoneThroughInvitationFlowStore {
  _FakeUpdateHasGoneThroughInvitationFlowStore_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateHasSentAnInvitationStore_8 extends _i1.SmartFake
    implements _i4.UpdateHasSentAnInvitationStore {
  _FakeUpdateHasSentAnInvitationStore_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateWantsToRepeatInvitationFlowStore_9 extends _i1.SmartFake
    implements _i4.UpdateWantsToRepeatInvitationFlowStore {
  _FakeUpdateWantsToRepeatInvitationFlowStore_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEnterCollaboratorPool_10 extends _i1.SmartFake
    implements _i5.EnterCollaboratorPool {
  _FakeEnterCollaboratorPool_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseFutureStore_11<T> extends _i1.SmartFake
    implements _i6.BaseFutureStore<T> {
  _FakeBaseFutureStore_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CollaborationHomeScreenWidgetsCoordinator].
///
/// See the documentation for Mockito's code generation for more information.
class MockCollaborationHomeScreenWidgetsCoordinator extends _i1.Mock
    implements _i7.CollaborationHomeScreenWidgetsCoordinator {
  @override
  _i2.BeachWavesStore get beachWaves => (super.noSuchMethod(
        Invocation.getter(#beachWaves),
        returnValue: _FakeBeachWavesStore_0(
          this,
          Invocation.getter(#beachWaves),
        ),
        returnValueForMissingStub: _FakeBeachWavesStore_0(
          this,
          Invocation.getter(#beachWaves),
        ),
      ) as _i2.BeachWavesStore);

  @override
  _i2.GradientTreeNodeStore get gradientTreeNode => (super.noSuchMethod(
        Invocation.getter(#gradientTreeNode),
        returnValue: _FakeGradientTreeNodeStore_1(
          this,
          Invocation.getter(#gradientTreeNode),
        ),
        returnValueForMissingStub: _FakeGradientTreeNodeStore_1(
          this,
          Invocation.getter(#gradientTreeNode),
        ),
      ) as _i2.GradientTreeNodeStore);

  @override
  _i2.SmartTextStore get smartText => (super.noSuchMethod(
        Invocation.getter(#smartText),
        returnValue: _FakeSmartTextStore_2(
          this,
          Invocation.getter(#smartText),
        ),
        returnValueForMissingStub: _FakeSmartTextStore_2(
          this,
          Invocation.getter(#smartText),
        ),
      ) as _i2.SmartTextStore);

  @override
  _i2.WifiDisconnectOverlayStore get wifiDisconnectOverlay =>
      (super.noSuchMethod(
        Invocation.getter(#wifiDisconnectOverlay),
        returnValue: _FakeWifiDisconnectOverlayStore_3(
          this,
          Invocation.getter(#wifiDisconnectOverlay),
        ),
        returnValueForMissingStub: _FakeWifiDisconnectOverlayStore_3(
          this,
          Invocation.getter(#wifiDisconnectOverlay),
        ),
      ) as _i2.WifiDisconnectOverlayStore);

  @override
  _i2.GestureCrossStore get gestureCross => (super.noSuchMethod(
        Invocation.getter(#gestureCross),
        returnValue: _FakeGestureCrossStore_4(
          this,
          Invocation.getter(#gestureCross),
        ),
        returnValueForMissingStub: _FakeGestureCrossStore_4(
          this,
          Invocation.getter(#gestureCross),
        ),
      ) as _i2.GestureCrossStore);

  @override
  bool get invitationIsSent => (super.noSuchMethod(
        Invocation.getter(#invitationIsSent),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set invitationIsSent(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #invitationIsSent,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isDisconnected => (super.noSuchMethod(
        Invocation.getter(#isDisconnected),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isDisconnected(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isDisconnected,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get shouldEnterCollaboratorPool => (super.noSuchMethod(
        Invocation.getter(#shouldEnterCollaboratorPool),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set shouldEnterCollaboratorPool(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #shouldEnterCollaboratorPool,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
        returnValueForMissingStub: <Object>[],
      ) as List<Object>);

  @override
  _i3.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_5(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeReactiveContext_5(
          this,
          Invocation.getter(#context),
        ),
      ) as _i3.ReactiveContext);

  @override
  dynamic initReactors(
    Function? onGradientTreeNodeTap,
    Function? onFlowCompleted,
    Function? enterCollaboratorPool,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #initReactors,
          [
            onGradientTreeNodeTap,
            onFlowCompleted,
            enterCollaboratorPool,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic smartTextReactor(Function? onFlowCompleted) => super.noSuchMethod(
        Invocation.method(
          #smartTextReactor,
          [onFlowCompleted],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic gradientTreeNodeTapReactor(Function? onGradientTreeNodeTap) =>
      super.noSuchMethod(
        Invocation.method(
          #gradientTreeNodeTapReactor,
          [onGradientTreeNodeTap],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic gradientTreeNodeOpacityReactor(Function? enterCollaboratorPool) =>
      super.noSuchMethod(
        Invocation.method(
          #gradientTreeNodeOpacityReactor,
          [enterCollaboratorPool],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserInformationCoordinator].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserInformationCoordinator extends _i1.Mock
    implements _i4.UserInformationCoordinator {
  @override
  _i4.GetUserInfoStore get getUserInfo => (super.noSuchMethod(
        Invocation.getter(#getUserInfo),
        returnValue: _FakeGetUserInfoStore_6(
          this,
          Invocation.getter(#getUserInfo),
        ),
        returnValueForMissingStub: _FakeGetUserInfoStore_6(
          this,
          Invocation.getter(#getUserInfo),
        ),
      ) as _i4.GetUserInfoStore);

  @override
  _i4.UpdateHasGoneThroughInvitationFlowStore
      get updateHasGoneThroughInvitationFlow => (super.noSuchMethod(
            Invocation.getter(#updateHasGoneThroughInvitationFlow),
            returnValue: _FakeUpdateHasGoneThroughInvitationFlowStore_7(
              this,
              Invocation.getter(#updateHasGoneThroughInvitationFlow),
            ),
            returnValueForMissingStub:
                _FakeUpdateHasGoneThroughInvitationFlowStore_7(
              this,
              Invocation.getter(#updateHasGoneThroughInvitationFlow),
            ),
          ) as _i4.UpdateHasGoneThroughInvitationFlowStore);

  @override
  _i4.UpdateHasSentAnInvitationStore get updateHasSentAnInvitation =>
      (super.noSuchMethod(
        Invocation.getter(#updateHasSentAnInvitation),
        returnValue: _FakeUpdateHasSentAnInvitationStore_8(
          this,
          Invocation.getter(#updateHasSentAnInvitation),
        ),
        returnValueForMissingStub: _FakeUpdateHasSentAnInvitationStore_8(
          this,
          Invocation.getter(#updateHasSentAnInvitation),
        ),
      ) as _i4.UpdateHasSentAnInvitationStore);

  @override
  _i4.UpdateWantsToRepeatInvitationFlowStore
      get updateWantsToRepeatInvitationFlow => (super.noSuchMethod(
            Invocation.getter(#updateWantsToRepeatInvitationFlow),
            returnValue: _FakeUpdateWantsToRepeatInvitationFlowStore_9(
              this,
              Invocation.getter(#updateWantsToRepeatInvitationFlow),
            ),
            returnValueForMissingStub:
                _FakeUpdateWantsToRepeatInvitationFlowStore_9(
              this,
              Invocation.getter(#updateWantsToRepeatInvitationFlow),
            ),
          ) as _i4.UpdateWantsToRepeatInvitationFlowStore);

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
        returnValueForMissingStub: <Object>[],
      ) as List<Object>);

  @override
  _i3.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_5(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeReactiveContext_5(
          this,
          Invocation.getter(#context),
        ),
      ) as _i3.ReactiveContext);
}

/// A class which mocks [EnterCollaboratorPoolStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockEnterCollaboratorPoolStore extends _i1.Mock
    implements _i8.EnterCollaboratorPoolStore {
  @override
  _i5.EnterCollaboratorPool get logic => (super.noSuchMethod(
        Invocation.getter(#logic),
        returnValue: _FakeEnterCollaboratorPool_10(
          this,
          Invocation.getter(#logic),
        ),
        returnValueForMissingStub: _FakeEnterCollaboratorPool_10(
          this,
          Invocation.getter(#logic),
        ),
      ) as _i5.EnterCollaboratorPool);

  @override
  bool get hasEntered => (super.noSuchMethod(
        Invocation.getter(#hasEntered),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set hasEntered(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #hasEntered,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.BaseFutureStore<_i5.CollaboratorPoolEntryStatusEntity> get futureStore =>
      (super.noSuchMethod(
        Invocation.getter(#futureStore),
        returnValue:
            _FakeBaseFutureStore_11<_i5.CollaboratorPoolEntryStatusEntity>(
          this,
          Invocation.getter(#futureStore),
        ),
        returnValueForMissingStub:
            _FakeBaseFutureStore_11<_i5.CollaboratorPoolEntryStatusEntity>(
          this,
          Invocation.getter(#futureStore),
        ),
      ) as _i6.BaseFutureStore<_i5.CollaboratorPoolEntryStatusEntity>);

  @override
  set futureStore(
          _i6.BaseFutureStore<_i5.CollaboratorPoolEntryStatusEntity>? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #futureStore,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
        returnValueForMissingStub: <Object>[],
      ) as List<Object>);

  @override
  _i9.StoreState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i9.StoreState.initial,
        returnValueForMissingStub: _i9.StoreState.initial,
      ) as _i9.StoreState);

  @override
  set state(_i9.StoreState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  set errorMessage(String? value) => super.noSuchMethod(
        Invocation.setter(
          #errorMessage,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_5(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeReactiveContext_5(
          this,
          Invocation.getter(#context),
        ),
      ) as _i3.ReactiveContext);

  @override
  void stateOrErrorUpdater(
          _i11.Either<_i12.Failure, _i5.CollaboratorPoolEntryStatusEntity>?
              result) =>
      super.noSuchMethod(
        Invocation.method(
          #stateOrErrorUpdater,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.Future<void> call(String? params) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  String mapFailureToMessage(_i12.Failure? failure) => (super.noSuchMethod(
        Invocation.method(
          #mapFailureToMessage,
          [failure],
        ),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #mapFailureToMessage,
            [failure],
          ),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #mapFailureToMessage,
            [failure],
          ),
        ),
      ) as String);
}
