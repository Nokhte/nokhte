// Mocks generated by Mockito 5.4.0 from annotations
// in primala/test/app/modules/p2p_request_recipient/fixtures/p2p_request_recipient_stack_mock_gen.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes, must_be_immutable
import 'dart:async' as _i10;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mobx/mobx.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:primala/app/core/error/failure.dart' as _i11;
import 'package:primala/app/core/interfaces/logic.dart' as _i14;
import 'package:primala/app/modules/p2p_request_recipient/domain/contracts/p2p_request_recipient_contract.dart'
    as _i3;
import 'package:primala/app/modules/p2p_request_recipient/domain/entities/p2p_recipient_request_entity.dart'
    as _i4;
import 'package:primala/app/modules/p2p_request_recipient/domain/entities/p2p_recipient_request_presentational_entity.dart'
    as _i13;
import 'package:primala/app/modules/p2p_request_recipient/domain/entities/p2p_recipient_response_status_entity.dart'
    as _i12;
import 'package:primala/app/modules/p2p_request_recipient/domain/logic/load_the_requests.dart'
    as _i5;
import 'package:primala/app/modules/p2p_request_recipient/domain/logic/respond_to_a_request.dart'
    as _i7;
import 'package:supabase_flutter/supabase_flutter.dart' as _i8;

import 'p2p_request_recipient_stack_mock_gen.txt' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeP2PRequestRecipientContract_1 extends _i1.SmartFake
    implements _i3.P2PRequestRecipientContract {
  _FakeP2PRequestRecipientContract_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_2 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeP2PRecipientRequestEntity_3 extends _i1.SmartFake
    implements _i4.P2PRecipientRequestEntity {
  _FakeP2PRecipientRequestEntity_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoadTheRequests_4 extends _i1.SmartFake
    implements _i5.LoadTheRequests {
  _FakeLoadTheRequests_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReactiveContext_5 extends _i1.SmartFake
    implements _i6.ReactiveContext {
  _FakeReactiveContext_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRespondToARequest_6 extends _i1.SmartFake
    implements _i7.RespondToARequest {
  _FakeRespondToARequest_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseClient_7 extends _i1.SmartFake
    implements _i8.SupabaseClient {
  _FakeSupabaseClient_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MP2PRequestRecipientContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockMP2PRequestRecipientContract extends _i1.Mock
    implements _i9.MP2PRequestRecipientContract {
  MockMP2PRequestRecipientContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i4.P2PRecipientRequestEntity>>
      loadTheRequests() => (super.noSuchMethod(
            Invocation.method(
              #loadTheRequests,
              [],
            ),
            returnValue: _i10.Future<
                    _i2.Either<_i11.Failure,
                        _i4.P2PRecipientRequestEntity>>.value(
                _FakeEither_0<_i11.Failure, _i4.P2PRecipientRequestEntity>(
              this,
              Invocation.method(
                #loadTheRequests,
                [],
              ),
            )),
          ) as _i10
              .Future<_i2.Either<_i11.Failure, _i4.P2PRecipientRequestEntity>>);
  @override
  _i10.Future<
          _i2.Either<_i11.Failure,
              _i12.P2PRequestRecipientResponseStatusEntity>>
      respondToARequest(String? senderUsername) => (super.noSuchMethod(
            Invocation.method(
              #respondToARequest,
              [senderUsername],
            ),
            returnValue: _i10.Future<
                    _i2.Either<_i11.Failure,
                        _i12.P2PRequestRecipientResponseStatusEntity>>.value(
                _FakeEither_0<_i11.Failure,
                    _i12.P2PRequestRecipientResponseStatusEntity>(
              this,
              Invocation.method(
                #respondToARequest,
                [senderUsername],
              ),
            )),
          ) as _i10.Future<
              _i2.Either<_i11.Failure,
                  _i12.P2PRequestRecipientResponseStatusEntity>>);
}

/// A class which mocks [MP2PRequestRecipientRemoteSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMP2PRequestRecipientRemoteSource extends _i1.Mock
    implements _i9.MP2PRequestRecipientRemoteSource {
  MockMP2PRequestRecipientRemoteSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<List<dynamic>> loadRequests() => (super.noSuchMethod(
        Invocation.method(
          #loadRequests,
          [],
        ),
        returnValue: _i10.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i10.Future<List<dynamic>>);
  @override
  _i10.Future<List<dynamic>> respondToARequest(String? senderUsername) =>
      (super.noSuchMethod(
        Invocation.method(
          #respondToARequest,
          [senderUsername],
        ),
        returnValue: _i10.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i10.Future<List<dynamic>>);
}

/// A class which mocks [MRespondToARequest].
///
/// See the documentation for Mockito's code generation for more information.
class MockMRespondToARequest extends _i1.Mock
    implements _i9.MRespondToARequest {
  MockMRespondToARequest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.P2PRequestRecipientContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeP2PRequestRecipientContract_1(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i3.P2PRequestRecipientContract);
  @override
  _i10.Future<
          _i2.Either<_i11.Failure,
              _i12.P2PRequestRecipientResponseStatusEntity>>
      call(_i7.P2PRespondToReqParams? params) => (super.noSuchMethod(
            Invocation.method(
              #call,
              [params],
            ),
            returnValue: _i10.Future<
                    _i2.Either<_i11.Failure,
                        _i12.P2PRequestRecipientResponseStatusEntity>>.value(
                _FakeEither_0<_i11.Failure,
                    _i12.P2PRequestRecipientResponseStatusEntity>(
              this,
              Invocation.method(
                #call,
                [params],
              ),
            )),
          ) as _i10.Future<
              _i2.Either<_i11.Failure,
                  _i12.P2PRequestRecipientResponseStatusEntity>>);
}

/// A class which mocks [MLoadTheRequests].
///
/// See the documentation for Mockito's code generation for more information.
class MockMLoadTheRequests extends _i1.Mock implements _i9.MLoadTheRequests {
  MockMLoadTheRequests() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.P2PRequestRecipientContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeP2PRequestRecipientContract_1(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i3.P2PRequestRecipientContract);
  @override
  set timer(_i10.Timer? _timer) => super.noSuchMethod(
        Invocation.setter(
          #timer,
          _timer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  DateTime get presentMoment => (super.noSuchMethod(
        Invocation.getter(#presentMoment),
        returnValue: _FakeDateTime_2(
          this,
          Invocation.getter(#presentMoment),
        ),
      ) as DateTime);
  @override
  set presentMoment(DateTime? _presentMoment) => super.noSuchMethod(
        Invocation.setter(
          #presentMoment,
          _presentMoment,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.P2PRecipientRequestEntity get currentContractResponse =>
      (super.noSuchMethod(
        Invocation.getter(#currentContractResponse),
        returnValue: _FakeP2PRecipientRequestEntity_3(
          this,
          Invocation.getter(#currentContractResponse),
        ),
      ) as _i4.P2PRecipientRequestEntity);
  @override
  set currentContractResponse(
          _i4.P2PRecipientRequestEntity? _currentContractResponse) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentContractResponse,
          _currentContractResponse,
        ),
        returnValueForMissingStub: null,
      );
  @override
  void startTimer() => super.noSuchMethod(
        Invocation.method(
          #startTimer,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic updateRelativeTimes(_i4.P2PRecipientRequestEntity? requestEntity) =>
      super.noSuchMethod(Invocation.method(
        #updateRelativeTimes,
        [requestEntity],
      ));
  @override
  _i10.Future<
          _i2.Either<_i11.Failure,
              _i13.P2PRecipientRequestPresentationalEntity>>
      call(_i14.NoParams? params) => (super.noSuchMethod(
            Invocation.method(
              #call,
              [params],
            ),
            returnValue: _i10.Future<
                    _i2.Either<_i11.Failure,
                        _i13.P2PRecipientRequestPresentationalEntity>>.value(
                _FakeEither_0<_i11.Failure,
                    _i13.P2PRecipientRequestPresentationalEntity>(
              this,
              Invocation.method(
                #call,
                [params],
              ),
            )),
          ) as _i10.Future<
              _i2.Either<_i11.Failure,
                  _i13.P2PRecipientRequestPresentationalEntity>>);
}

/// A class which mocks [MLoadtheRequestsGetterStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockMLoadtheRequestsGetterStore extends _i1.Mock
    implements _i9.MLoadtheRequestsGetterStore {
  MockMLoadtheRequestsGetterStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.LoadTheRequests get loadTheRequestsLogic => (super.noSuchMethod(
        Invocation.getter(#loadTheRequestsLogic),
        returnValue: _FakeLoadTheRequests_4(
          this,
          Invocation.getter(#loadTheRequestsLogic),
        ),
      ) as _i5.LoadTheRequests);
  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
      ) as List<Object>);
  @override
  _i6.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_5(
          this,
          Invocation.getter(#context),
        ),
      ) as _i6.ReactiveContext);
  @override
  _i10.Future<
      _i2.Either<_i11.Failure,
          _i13.P2PRecipientRequestPresentationalEntity>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i10.Future<
                _i2.Either<_i11.Failure,
                    _i13.P2PRecipientRequestPresentationalEntity>>.value(
            _FakeEither_0<_i11.Failure,
                _i13.P2PRecipientRequestPresentationalEntity>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i10.Future<
          _i2.Either<_i11.Failure,
              _i13.P2PRecipientRequestPresentationalEntity>>);
}

/// A class which mocks [MRespondToARequestGetterStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockMRespondToARequestGetterStore extends _i1.Mock
    implements _i9.MRespondToARequestGetterStore {
  MockMRespondToARequestGetterStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.RespondToARequest get respondToARequestLogic => (super.noSuchMethod(
        Invocation.getter(#respondToARequestLogic),
        returnValue: _FakeRespondToARequest_6(
          this,
          Invocation.getter(#respondToARequestLogic),
        ),
      ) as _i7.RespondToARequest);
  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
      ) as List<Object>);
  @override
  _i6.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_5(
          this,
          Invocation.getter(#context),
        ),
      ) as _i6.ReactiveContext);
  @override
  _i10.Future<
          _i2.Either<_i11.Failure,
              _i12.P2PRequestRecipientResponseStatusEntity>>
      call(String? senderUsername) => (super.noSuchMethod(
            Invocation.method(
              #call,
              [senderUsername],
            ),
            returnValue: _i10.Future<
                    _i2.Either<_i11.Failure,
                        _i12.P2PRequestRecipientResponseStatusEntity>>.value(
                _FakeEither_0<_i11.Failure,
                    _i12.P2PRequestRecipientResponseStatusEntity>(
              this,
              Invocation.method(
                #call,
                [senderUsername],
              ),
            )),
          ) as _i10.Future<
              _i2.Either<_i11.Failure,
                  _i12.P2PRequestRecipientResponseStatusEntity>>);
}

/// A class which mocks [MP2PRequestRecipientRemoteSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockMP2PRequestRecipientRemoteSourceImpl extends _i1.Mock
    implements _i9.MP2PRequestRecipientRemoteSourceImpl {
  MockMP2PRequestRecipientRemoteSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.SupabaseClient get supabase => (super.noSuchMethod(
        Invocation.getter(#supabase),
        returnValue: _FakeSupabaseClient_7(
          this,
          Invocation.getter(#supabase),
        ),
      ) as _i8.SupabaseClient);
  @override
  String get currentUserId => (super.noSuchMethod(
        Invocation.getter(#currentUserId),
        returnValue: '',
      ) as String);
  @override
  _i10.Future<List<dynamic>> loadRequests() => (super.noSuchMethod(
        Invocation.method(
          #loadRequests,
          [],
        ),
        returnValue: _i10.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i10.Future<List<dynamic>>);
  @override
  _i10.Future<List<dynamic>> respondToARequest(String? senderUsername) =>
      (super.noSuchMethod(
        Invocation.method(
          #respondToARequest,
          [senderUsername],
        ),
        returnValue: _i10.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i10.Future<List<dynamic>>);
}
