// Mocks generated by Mockito 5.4.2 from annotations
// in nokhte/test/app/modules/shared/shared_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:ui' as _i6;

import 'package:mobx/mobx.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:nokhte/app/core/interfaces/logic.dart' as _i10;
import 'package:nokhte/app/core/mobx/base_custom_animated_widget_store.dart'
    as _i4;
import 'package:nokhte/app/core/types/types.dart' as _i8;
import 'package:nokhte/app/core/widgets/beach_widgets/shared/shared.dart'
    as _i7;
import 'package:nokhte/app/core/widgets/widget_constants.dart' as _i9;
import 'package:nokhte/app/core/widgets/widgets.dart' as _i2;
import 'package:simple_animations/simple_animations.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTimesUpEndToTheDepthsMovieStore_0 extends _i1.SmartFake
    implements _i2.TimesUpEndToTheDepthsMovieStore {
  _FakeTimesUpEndToTheDepthsMovieStore_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSuspendedAtTheDepthsMovieStore_1 extends _i1.SmartFake
    implements _i2.SuspendedAtTheDepthsMovieStore {
  _FakeSuspendedAtTheDepthsMovieStore_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOnShoreToOceanDiveMovieStore_2 extends _i1.SmartFake
    implements _i2.OnShoreToOceanDiveMovieStore {
  _FakeOnShoreToOceanDiveMovieStore_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOnShoreMovieStore_3 extends _i1.SmartFake
    implements _i2.OnShoreMovieStore {
  _FakeOnShoreMovieStore_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOceanDiveToOnShoreMovieStore_4 extends _i1.SmartFake
    implements _i2.OceanDiveToOnShoreMovieStore {
  _FakeOceanDiveToOnShoreMovieStore_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSuspendedAtOceanDiveStore_5 extends _i1.SmartFake
    implements _i2.SuspendedAtOceanDiveStore {
  _FakeSuspendedAtOceanDiveStore_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOceanDiveToTimesUpStartMovieStore_6 extends _i1.SmartFake
    implements _i2.OceanDiveToTimesUpStartMovieStore {
  _FakeOceanDiveToTimesUpStartMovieStore_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTimesUpMovieStore_7 extends _i1.SmartFake
    implements _i2.TimesUpMovieStore {
  _FakeTimesUpMovieStore_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTimesUpEndToOceanDiveMovieStore_8 extends _i1.SmartFake
    implements _i2.TimesUpEndToOceanDiveMovieStore {
  _FakeTimesUpEndToOceanDiveMovieStore_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTimesUpDynamicPointToTheDepthsMovieStore_9 extends _i1.SmartFake
    implements _i2.TimesUpDynamicPointToTheDepthsMovieStore {
  _FakeTimesUpDynamicPointToTheDepthsMovieStore_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBlackOutMovieStore_10 extends _i1.SmartFake
    implements _i2.BlackOutMovieStore {
  _FakeBlackOutMovieStore_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeObservableList_11<T> extends _i1.SmartFake
    implements _i3.ObservableList<T> {
  _FakeObservableList_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseCustomAnimatedWidgetStore_12<T> extends _i1.SmartFake
    implements _i4.BaseCustomAnimatedWidgetStore<T> {
  _FakeBaseCustomAnimatedWidgetStore_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieTween_13 extends _i1.SmartFake implements _i5.MovieTween {
  _FakeMovieTween_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReactiveContext_14 extends _i1.SmartFake
    implements _i3.ReactiveContext {
  _FakeReactiveContext_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_15 extends _i1.SmartFake implements Duration {
  _FakeDuration_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSize_16 extends _i1.SmartFake implements _i6.Size {
  _FakeSize_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOffset_17 extends _i1.SmartFake implements _i6.Offset {
  _FakeOffset_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BeachWavesStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockBeachWavesStore extends _i1.Mock implements _i2.BeachWavesStore {
  @override
  _i2.TimesUpEndToTheDepthsMovieStore get timesUpEndToTheDepthsMovieStore =>
      (super.noSuchMethod(
        Invocation.getter(#timesUpEndToTheDepthsMovieStore),
        returnValue: _FakeTimesUpEndToTheDepthsMovieStore_0(
          this,
          Invocation.getter(#timesUpEndToTheDepthsMovieStore),
        ),
        returnValueForMissingStub: _FakeTimesUpEndToTheDepthsMovieStore_0(
          this,
          Invocation.getter(#timesUpEndToTheDepthsMovieStore),
        ),
      ) as _i2.TimesUpEndToTheDepthsMovieStore);

  @override
  _i2.SuspendedAtTheDepthsMovieStore get suspendedAtTheDepthsMovieStore =>
      (super.noSuchMethod(
        Invocation.getter(#suspendedAtTheDepthsMovieStore),
        returnValue: _FakeSuspendedAtTheDepthsMovieStore_1(
          this,
          Invocation.getter(#suspendedAtTheDepthsMovieStore),
        ),
        returnValueForMissingStub: _FakeSuspendedAtTheDepthsMovieStore_1(
          this,
          Invocation.getter(#suspendedAtTheDepthsMovieStore),
        ),
      ) as _i2.SuspendedAtTheDepthsMovieStore);

  @override
  _i2.OnShoreToOceanDiveMovieStore get onShoreToOceanDiveMovieStore =>
      (super.noSuchMethod(
        Invocation.getter(#onShoreToOceanDiveMovieStore),
        returnValue: _FakeOnShoreToOceanDiveMovieStore_2(
          this,
          Invocation.getter(#onShoreToOceanDiveMovieStore),
        ),
        returnValueForMissingStub: _FakeOnShoreToOceanDiveMovieStore_2(
          this,
          Invocation.getter(#onShoreToOceanDiveMovieStore),
        ),
      ) as _i2.OnShoreToOceanDiveMovieStore);

  @override
  _i2.OnShoreMovieStore get onShoreMovieStore => (super.noSuchMethod(
        Invocation.getter(#onShoreMovieStore),
        returnValue: _FakeOnShoreMovieStore_3(
          this,
          Invocation.getter(#onShoreMovieStore),
        ),
        returnValueForMissingStub: _FakeOnShoreMovieStore_3(
          this,
          Invocation.getter(#onShoreMovieStore),
        ),
      ) as _i2.OnShoreMovieStore);

  @override
  _i2.OceanDiveToOnShoreMovieStore get oceanDiveToOnShoreMovieStore =>
      (super.noSuchMethod(
        Invocation.getter(#oceanDiveToOnShoreMovieStore),
        returnValue: _FakeOceanDiveToOnShoreMovieStore_4(
          this,
          Invocation.getter(#oceanDiveToOnShoreMovieStore),
        ),
        returnValueForMissingStub: _FakeOceanDiveToOnShoreMovieStore_4(
          this,
          Invocation.getter(#oceanDiveToOnShoreMovieStore),
        ),
      ) as _i2.OceanDiveToOnShoreMovieStore);

  @override
  _i2.SuspendedAtOceanDiveStore get suspendedAtOceanDiveStore =>
      (super.noSuchMethod(
        Invocation.getter(#suspendedAtOceanDiveStore),
        returnValue: _FakeSuspendedAtOceanDiveStore_5(
          this,
          Invocation.getter(#suspendedAtOceanDiveStore),
        ),
        returnValueForMissingStub: _FakeSuspendedAtOceanDiveStore_5(
          this,
          Invocation.getter(#suspendedAtOceanDiveStore),
        ),
      ) as _i2.SuspendedAtOceanDiveStore);

  @override
  _i2.OceanDiveToTimesUpStartMovieStore get oceanDiveToTimesUpStartMovieStore =>
      (super.noSuchMethod(
        Invocation.getter(#oceanDiveToTimesUpStartMovieStore),
        returnValue: _FakeOceanDiveToTimesUpStartMovieStore_6(
          this,
          Invocation.getter(#oceanDiveToTimesUpStartMovieStore),
        ),
        returnValueForMissingStub: _FakeOceanDiveToTimesUpStartMovieStore_6(
          this,
          Invocation.getter(#oceanDiveToTimesUpStartMovieStore),
        ),
      ) as _i2.OceanDiveToTimesUpStartMovieStore);

  @override
  _i2.TimesUpMovieStore get timesUpMovieStore => (super.noSuchMethod(
        Invocation.getter(#timesUpMovieStore),
        returnValue: _FakeTimesUpMovieStore_7(
          this,
          Invocation.getter(#timesUpMovieStore),
        ),
        returnValueForMissingStub: _FakeTimesUpMovieStore_7(
          this,
          Invocation.getter(#timesUpMovieStore),
        ),
      ) as _i2.TimesUpMovieStore);

  @override
  _i2.TimesUpEndToOceanDiveMovieStore get timesUpEndToOceanDiveMovie =>
      (super.noSuchMethod(
        Invocation.getter(#timesUpEndToOceanDiveMovie),
        returnValue: _FakeTimesUpEndToOceanDiveMovieStore_8(
          this,
          Invocation.getter(#timesUpEndToOceanDiveMovie),
        ),
        returnValueForMissingStub: _FakeTimesUpEndToOceanDiveMovieStore_8(
          this,
          Invocation.getter(#timesUpEndToOceanDiveMovie),
        ),
      ) as _i2.TimesUpEndToOceanDiveMovieStore);

  @override
  _i2.TimesUpDynamicPointToTheDepthsMovieStore
      get timesUpDynamicPointToTheDepthsMovie => (super.noSuchMethod(
            Invocation.getter(#timesUpDynamicPointToTheDepthsMovie),
            returnValue: _FakeTimesUpDynamicPointToTheDepthsMovieStore_9(
              this,
              Invocation.getter(#timesUpDynamicPointToTheDepthsMovie),
            ),
            returnValueForMissingStub:
                _FakeTimesUpDynamicPointToTheDepthsMovieStore_9(
              this,
              Invocation.getter(#timesUpDynamicPointToTheDepthsMovie),
            ),
          ) as _i2.TimesUpDynamicPointToTheDepthsMovieStore);

  @override
  _i2.BlackOutMovieStore get blackOutMovie => (super.noSuchMethod(
        Invocation.getter(#blackOutMovie),
        returnValue: _FakeBlackOutMovieStore_10(
          this,
          Invocation.getter(#blackOutMovie),
        ),
        returnValueForMissingStub: _FakeBlackOutMovieStore_10(
          this,
          Invocation.getter(#blackOutMovie),
        ),
      ) as _i2.BlackOutMovieStore);

  @override
  Map<_i7.BeachWaveMovieModes, _i4.BaseCustomAnimatedWidgetStore<dynamic>>
      get movieModeToStoreLookup => (super.noSuchMethod(
            Invocation.getter(#movieModeToStoreLookup),
            returnValue: <_i7.BeachWaveMovieModes,
                _i4.BaseCustomAnimatedWidgetStore<dynamic>>{},
            returnValueForMissingStub: <_i7.BeachWaveMovieModes,
                _i4.BaseCustomAnimatedWidgetStore<dynamic>>{},
          ) as Map<_i7.BeachWaveMovieModes,
              _i4.BaseCustomAnimatedWidgetStore<dynamic>>);

  @override
  set movieModeToStoreLookup(
          Map<_i7.BeachWaveMovieModes,
                  _i4.BaseCustomAnimatedWidgetStore<dynamic>>?
              _movieModeToStoreLookup) =>
      super.noSuchMethod(
        Invocation.setter(
          #movieModeToStoreLookup,
          _movieModeToStoreLookup,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get finishedCount => (super.noSuchMethod(
        Invocation.getter(#finishedCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set finishedCount(int? value) => super.noSuchMethod(
        Invocation.setter(
          #finishedCount,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ObservableList<_i7.ColorAndStop> get pivotColors => (super.noSuchMethod(
        Invocation.getter(#pivotColors),
        returnValue: _FakeObservableList_11<_i7.ColorAndStop>(
          this,
          Invocation.getter(#pivotColors),
        ),
        returnValueForMissingStub: _FakeObservableList_11<_i7.ColorAndStop>(
          this,
          Invocation.getter(#pivotColors),
        ),
      ) as _i3.ObservableList<_i7.ColorAndStop>);

  @override
  set pivotColors(_i3.ObservableList<_i7.ColorAndStop>? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #pivotColors,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.MovieStatus get movieStatus => (super.noSuchMethod(
        Invocation.getter(#movieStatus),
        returnValue: _i8.MovieStatus.idle,
        returnValueForMissingStub: _i8.MovieStatus.idle,
      ) as _i8.MovieStatus);

  @override
  set movieStatus(_i8.MovieStatus? value) => super.noSuchMethod(
        Invocation.setter(
          #movieStatus,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.BeachWaveMovieModes get movieMode => (super.noSuchMethod(
        Invocation.getter(#movieMode),
        returnValue: _i7.BeachWaveMovieModes.none,
        returnValueForMissingStub: _i7.BeachWaveMovieModes.none,
      ) as _i7.BeachWaveMovieModes);

  @override
  set movieMode(_i7.BeachWaveMovieModes? value) => super.noSuchMethod(
        Invocation.setter(
          #movieMode,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.BaseCustomAnimatedWidgetStore<dynamic> get currentStore =>
      (super.noSuchMethod(
        Invocation.getter(#currentStore),
        returnValue: _FakeBaseCustomAnimatedWidgetStore_12<dynamic>(
          this,
          Invocation.getter(#currentStore),
        ),
        returnValueForMissingStub:
            _FakeBaseCustomAnimatedWidgetStore_12<dynamic>(
          this,
          Invocation.getter(#currentStore),
        ),
      ) as _i4.BaseCustomAnimatedWidgetStore<dynamic>);

  @override
  _i5.Control get currentControl => (super.noSuchMethod(
        Invocation.getter(#currentControl),
        returnValue: _i5.Control.stop,
        returnValueForMissingStub: _i5.Control.stop,
      ) as _i5.Control);

  @override
  _i8.MovieStatus get currentMovieStatus => (super.noSuchMethod(
        Invocation.getter(#currentMovieStatus),
        returnValue: _i8.MovieStatus.idle,
        returnValueForMissingStub: _i8.MovieStatus.idle,
      ) as _i8.MovieStatus);

  @override
  _i5.MovieTween get currentMovie => (super.noSuchMethod(
        Invocation.getter(#currentMovie),
        returnValue: _FakeMovieTween_13(
          this,
          Invocation.getter(#currentMovie),
        ),
        returnValueForMissingStub: _FakeMovieTween_13(
          this,
          Invocation.getter(#currentMovie),
        ),
      ) as _i5.MovieTween);

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
        returnValueForMissingStub: <Object>[],
      ) as List<Object>);

  @override
  _i3.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_14(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeReactiveContext_14(
          this,
          Invocation.getter(#context),
        ),
      ) as _i3.ReactiveContext);

  @override
  dynamic setPivotColors(List<dynamic>? currentAnimationValues) =>
      super.noSuchMethod(
        Invocation.method(
          #setPivotColors,
          [currentAnimationValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic setMovieMode(_i7.BeachWaveMovieModes? newMovieMode) =>
      super.noSuchMethod(
        Invocation.method(
          #setMovieMode,
          [newMovieMode],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SmartTextStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockSmartTextStore extends _i1.Mock implements _i2.SmartTextStore {
  @override
  _i3.ObservableList<_i9.RotatingTextData> get messagesData =>
      (super.noSuchMethod(
        Invocation.getter(#messagesData),
        returnValue: _FakeObservableList_11<_i9.RotatingTextData>(
          this,
          Invocation.getter(#messagesData),
        ),
        returnValueForMissingStub: _FakeObservableList_11<_i9.RotatingTextData>(
          this,
          Invocation.getter(#messagesData),
        ),
      ) as _i3.ObservableList<_i9.RotatingTextData>);

  @override
  set messagesData(_i3.ObservableList<_i9.RotatingTextData>? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #messagesData,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get currentIndex => (super.noSuchMethod(
        Invocation.getter(#currentIndex),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set currentIndex(int? value) => super.noSuchMethod(
        Invocation.setter(
          #currentIndex,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get currentSubText => (super.noSuchMethod(
        Invocation.getter(#currentSubText),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  String get currentMainText => (super.noSuchMethod(
        Invocation.getter(#currentMainText),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  bool get currentShouldPauseHere => (super.noSuchMethod(
        Invocation.getter(#currentShouldPauseHere),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  double get currentMainTextFontSize => (super.noSuchMethod(
        Invocation.getter(#currentMainTextFontSize),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get currentSubTextFontSize => (super.noSuchMethod(
        Invocation.getter(#currentSubTextFontSize),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  Duration get currentInitialFadeInDelay => (super.noSuchMethod(
        Invocation.getter(#currentInitialFadeInDelay),
        returnValue: _FakeDuration_15(
          this,
          Invocation.getter(#currentInitialFadeInDelay),
        ),
        returnValueForMissingStub: _FakeDuration_15(
          this,
          Invocation.getter(#currentInitialFadeInDelay),
        ),
      ) as Duration);

  @override
  Duration get currentOnScreenTime => (super.noSuchMethod(
        Invocation.getter(#currentOnScreenTime),
        returnValue: _FakeDuration_15(
          this,
          Invocation.getter(#currentOnScreenTime),
        ),
        returnValueForMissingStub: _FakeDuration_15(
          this,
          Invocation.getter(#currentOnScreenTime),
        ),
      ) as Duration);

  @override
  _i9.Gestures get currentUnlockGesture => (super.noSuchMethod(
        Invocation.getter(#currentUnlockGesture),
        returnValue: _i9.Gestures.doubleTap,
        returnValueForMissingStub: _i9.Gestures.doubleTap,
      ) as _i9.Gestures);

  @override
  bool get callsOnCompleteTwice => (super.noSuchMethod(
        Invocation.getter(#callsOnCompleteTwice),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.MovieTween get movie => (super.noSuchMethod(
        Invocation.getter(#movie),
        returnValue: _FakeMovieTween_13(
          this,
          Invocation.getter(#movie),
        ),
        returnValueForMissingStub: _FakeMovieTween_13(
          this,
          Invocation.getter(#movie),
        ),
      ) as _i5.MovieTween);

  @override
  set movie(_i5.MovieTween? value) => super.noSuchMethod(
        Invocation.setter(
          #movie,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Control get control => (super.noSuchMethod(
        Invocation.getter(#control),
        returnValue: _i5.Control.stop,
        returnValueForMissingStub: _i5.Control.stop,
      ) as _i5.Control);

  @override
  set control(_i5.Control? value) => super.noSuchMethod(
        Invocation.setter(
          #control,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Control get pastControl => (super.noSuchMethod(
        Invocation.getter(#pastControl),
        returnValue: _i5.Control.stop,
        returnValueForMissingStub: _i5.Control.stop,
      ) as _i5.Control);

  @override
  set pastControl(_i5.Control? value) => super.noSuchMethod(
        Invocation.setter(
          #pastControl,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get showWidget => (super.noSuchMethod(
        Invocation.getter(#showWidget),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set showWidget(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #showWidget,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.MovieStatus get movieStatus => (super.noSuchMethod(
        Invocation.getter(#movieStatus),
        returnValue: _i8.MovieStatus.idle,
        returnValueForMissingStub: _i8.MovieStatus.idle,
      ) as _i8.MovieStatus);

  @override
  set movieStatus(_i8.MovieStatus? value) => super.noSuchMethod(
        Invocation.setter(
          #movieStatus,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
        returnValueForMissingStub: <Object>[],
      ) as List<Object>);

  @override
  _i3.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_14(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeReactiveContext_14(
          this,
          Invocation.getter(#context),
        ),
      ) as _i3.ReactiveContext);

  @override
  dynamic setMessagesData(List<_i9.RotatingTextData>? newList) =>
      super.noSuchMethod(
        Invocation.method(
          #setMessagesData,
          [newList],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic startRotatingText({bool? isResuming = false}) => super.noSuchMethod(
        Invocation.method(
          #startRotatingText,
          [],
          {#isResuming: isResuming},
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic setPastControl(_i5.Control? newControl) => super.noSuchMethod(
        Invocation.method(
          #setPastControl,
          [newControl],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setMovie(_i5.MovieTween? newMovie) => super.noSuchMethod(
        Invocation.method(
          #setMovie,
          [newMovie],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setControl(_i5.Control? newControl) => super.noSuchMethod(
        Invocation.method(
          #setControl,
          [newControl],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic setMovieStatus(_i8.MovieStatus? newMovieStatus) => super.noSuchMethod(
        Invocation.method(
          #setMovieStatus,
          [newMovieStatus],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TrailingTextStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockTrailingTextStore extends _i1.Mock implements _i2.TrailingTextStore {
  @override
  _i6.Size get textSize => (super.noSuchMethod(
        Invocation.getter(#textSize),
        returnValue: _FakeSize_16(
          this,
          Invocation.getter(#textSize),
        ),
        returnValueForMissingStub: _FakeSize_16(
          this,
          Invocation.getter(#textSize),
        ),
      ) as _i6.Size);

  @override
  set textSize(_i6.Size? value) => super.noSuchMethod(
        Invocation.setter(
          #textSize,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get callsOnCompleteTwice => (super.noSuchMethod(
        Invocation.getter(#callsOnCompleteTwice),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.MovieTween get movie => (super.noSuchMethod(
        Invocation.getter(#movie),
        returnValue: _FakeMovieTween_13(
          this,
          Invocation.getter(#movie),
        ),
        returnValueForMissingStub: _FakeMovieTween_13(
          this,
          Invocation.getter(#movie),
        ),
      ) as _i5.MovieTween);

  @override
  set movie(_i5.MovieTween? value) => super.noSuchMethod(
        Invocation.setter(
          #movie,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Control get control => (super.noSuchMethod(
        Invocation.getter(#control),
        returnValue: _i5.Control.stop,
        returnValueForMissingStub: _i5.Control.stop,
      ) as _i5.Control);

  @override
  set control(_i5.Control? value) => super.noSuchMethod(
        Invocation.setter(
          #control,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Control get pastControl => (super.noSuchMethod(
        Invocation.getter(#pastControl),
        returnValue: _i5.Control.stop,
        returnValueForMissingStub: _i5.Control.stop,
      ) as _i5.Control);

  @override
  set pastControl(_i5.Control? value) => super.noSuchMethod(
        Invocation.setter(
          #pastControl,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get showWidget => (super.noSuchMethod(
        Invocation.getter(#showWidget),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set showWidget(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #showWidget,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.MovieStatus get movieStatus => (super.noSuchMethod(
        Invocation.getter(#movieStatus),
        returnValue: _i8.MovieStatus.idle,
        returnValueForMissingStub: _i8.MovieStatus.idle,
      ) as _i8.MovieStatus);

  @override
  set movieStatus(_i8.MovieStatus? value) => super.noSuchMethod(
        Invocation.setter(
          #movieStatus,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
        returnValueForMissingStub: <Object>[],
      ) as List<Object>);

  @override
  _i3.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_14(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeReactiveContext_14(
          this,
          Invocation.getter(#context),
        ),
      ) as _i3.ReactiveContext);

  @override
  dynamic setTextSizeAndMovie({
    required _i6.Size? newTextSize,
    required _i2.TextRevealDirection? newTextRevealDirection,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setTextSizeAndMovie,
          [],
          {
            #newTextSize: newTextSize,
            #newTextRevealDirection: newTextRevealDirection,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic initMovie(_i10.NoParams? params) => super.noSuchMethod(
        Invocation.method(
          #initMovie,
          [params],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic setPastControl(_i5.Control? newControl) => super.noSuchMethod(
        Invocation.method(
          #setPastControl,
          [newControl],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setMovie(_i5.MovieTween? newMovie) => super.noSuchMethod(
        Invocation.method(
          #setMovie,
          [newMovie],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setControl(_i5.Control? newControl) => super.noSuchMethod(
        Invocation.method(
          #setControl,
          [newControl],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic setMovieStatus(_i8.MovieStatus? newMovieStatus) => super.noSuchMethod(
        Invocation.method(
          #setMovieStatus,
          [newMovieStatus],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NokhteStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockNokhteStore extends _i1.Mock implements _i2.NokhteStore {
  @override
  _i6.Offset get centerCoordinates => (super.noSuchMethod(
        Invocation.getter(#centerCoordinates),
        returnValue: _FakeOffset_17(
          this,
          Invocation.getter(#centerCoordinates),
        ),
        returnValueForMissingStub: _FakeOffset_17(
          this,
          Invocation.getter(#centerCoordinates),
        ),
      ) as _i6.Offset);

  @override
  set centerCoordinates(_i6.Offset? value) => super.noSuchMethod(
        Invocation.setter(
          #centerCoordinates,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.NokhteMovieModes get movieMode => (super.noSuchMethod(
        Invocation.getter(#movieMode),
        returnValue: _i2.NokhteMovieModes.moveUpAndApparate,
        returnValueForMissingStub: _i2.NokhteMovieModes.moveUpAndApparate,
      ) as _i2.NokhteMovieModes);

  @override
  set movieMode(_i2.NokhteMovieModes? value) => super.noSuchMethod(
        Invocation.setter(
          #movieMode,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get callsOnCompleteTwice => (super.noSuchMethod(
        Invocation.getter(#callsOnCompleteTwice),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.MovieTween get movie => (super.noSuchMethod(
        Invocation.getter(#movie),
        returnValue: _FakeMovieTween_13(
          this,
          Invocation.getter(#movie),
        ),
        returnValueForMissingStub: _FakeMovieTween_13(
          this,
          Invocation.getter(#movie),
        ),
      ) as _i5.MovieTween);

  @override
  set movie(_i5.MovieTween? value) => super.noSuchMethod(
        Invocation.setter(
          #movie,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Control get control => (super.noSuchMethod(
        Invocation.getter(#control),
        returnValue: _i5.Control.stop,
        returnValueForMissingStub: _i5.Control.stop,
      ) as _i5.Control);

  @override
  set control(_i5.Control? value) => super.noSuchMethod(
        Invocation.setter(
          #control,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Control get pastControl => (super.noSuchMethod(
        Invocation.getter(#pastControl),
        returnValue: _i5.Control.stop,
        returnValueForMissingStub: _i5.Control.stop,
      ) as _i5.Control);

  @override
  set pastControl(_i5.Control? value) => super.noSuchMethod(
        Invocation.setter(
          #pastControl,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get showWidget => (super.noSuchMethod(
        Invocation.getter(#showWidget),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set showWidget(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #showWidget,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.MovieStatus get movieStatus => (super.noSuchMethod(
        Invocation.getter(#movieStatus),
        returnValue: _i8.MovieStatus.idle,
        returnValueForMissingStub: _i8.MovieStatus.idle,
      ) as _i8.MovieStatus);

  @override
  set movieStatus(_i8.MovieStatus? value) => super.noSuchMethod(
        Invocation.setter(
          #movieStatus,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
        returnValueForMissingStub: <Object>[],
      ) as List<Object>);

  @override
  _i3.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_14(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeReactiveContext_14(
          this,
          Invocation.getter(#context),
        ),
      ) as _i3.ReactiveContext);

  @override
  dynamic setMovieModes(_i2.NokhteMovieModes? newMovieMode) =>
      super.noSuchMethod(
        Invocation.method(
          #setMovieModes,
          [newMovieMode],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic setCenterCoordinates(_i6.Offset? newCenter) => super.noSuchMethod(
        Invocation.method(
          #setCenterCoordinates,
          [newCenter],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic initPositionMovie(
    _i6.Offset? touchPoint,
    _i6.Offset? centerPoint,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #initPositionMovie,
          [
            touchPoint,
            centerPoint,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic setPastControl(_i5.Control? newControl) => super.noSuchMethod(
        Invocation.method(
          #setPastControl,
          [newControl],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setMovie(_i5.MovieTween? newMovie) => super.noSuchMethod(
        Invocation.method(
          #setMovie,
          [newMovie],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setControl(_i5.Control? newControl) => super.noSuchMethod(
        Invocation.method(
          #setControl,
          [newControl],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic setMovieStatus(_i8.MovieStatus? newMovieStatus) => super.noSuchMethod(
        Invocation.method(
          #setMovieStatus,
          [newMovieStatus],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TapDetector].
///
/// See the documentation for Mockito's code generation for more information.
class MockTapDetector extends _i1.Mock implements _i2.TapDetector {
  @override
  int get tapCount => (super.noSuchMethod(
        Invocation.getter(#tapCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set tapCount(int? value) => super.noSuchMethod(
        Invocation.setter(
          #tapCount,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Offset get currentTapPosition => (super.noSuchMethod(
        Invocation.getter(#currentTapPosition),
        returnValue: _FakeOffset_17(
          this,
          Invocation.getter(#currentTapPosition),
        ),
        returnValueForMissingStub: _FakeOffset_17(
          this,
          Invocation.getter(#currentTapPosition),
        ),
      ) as _i6.Offset);

  @override
  set currentTapPosition(_i6.Offset? value) => super.noSuchMethod(
        Invocation.setter(
          #currentTapPosition,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
        returnValueForMissingStub: <Object>[],
      ) as List<Object>);

  @override
  _i3.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_14(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeReactiveContext_14(
          this,
          Invocation.getter(#context),
        ),
      ) as _i3.ReactiveContext);

  @override
  dynamic onTapDown(_i6.Offset? newOffset) => super.noSuchMethod(
        Invocation.method(
          #onTapDown,
          [newOffset],
        ),
        returnValueForMissingStub: null,
      );
}
