// Mocks generated by Mockito 5.4.0 from annotations
// in primala/test/app/modules/authentication/fixtures/authentication_stack_mock_gen.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes, must_be_immutable
import 'dart:async' as _i17;

import 'package:dartz/dartz.dart' as _i5;
import 'package:mobx/mobx.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:primala/app/core/error/failure.dart' as _i18;
import 'package:primala/app/core/interfaces/auth_providers.dart' as _i22;
import 'package:primala/app/core/interfaces/logic.dart' as _i20;
import 'package:primala/app/core/mobx/base_future_store.dart' as _i12;
import 'package:primala/app/core/mobx/store_state.dart' as _i21;
import 'package:primala/app/modules/authentication/data/models/auth_provider_model.dart'
    as _i3;
import 'package:primala/app/modules/authentication/data/models/auth_state_model.dart'
    as _i4;
import 'package:primala/app/modules/authentication/domain/contracts/authentication_contract.dart'
    as _i7;
import 'package:primala/app/modules/authentication/domain/entities/auth_provider_entity.dart'
    as _i19;
import 'package:primala/app/modules/authentication/domain/entities/auth_state_entity.dart'
    as _i6;
import 'package:primala/app/modules/authentication/domain/entities/name_creation_status_entity.dart'
    as _i11;
import 'package:primala/app/modules/authentication/domain/logic/add_name_to_database.dart'
    as _i8;
import 'package:primala/app/modules/authentication/domain/logic/get_auth_state.dart'
    as _i15;
import 'package:primala/app/modules/authentication/domain/logic/sign_in_with_apple.dart'
    as _i13;
import 'package:primala/app/modules/authentication/domain/logic/sign_in_with_google.dart'
    as _i14;
import 'package:primala/app/modules/authentication/presentation/mobx/getters/add_name_to_database_getter_store.dart'
    as _i10;
import 'package:supabase_flutter/supabase_flutter.dart' as _i2;

import 'authentication_stack_mock_gen.dart' as _i16;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSupabaseClient_0 extends _i1.SmartFake
    implements _i2.SupabaseClient {
  _FakeSupabaseClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthProviderModel_1 extends _i1.SmartFake
    implements _i3.AuthProviderModel {
  _FakeAuthProviderModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthModel_2 extends _i1.SmartFake implements _i4.AuthModel {
  _FakeAuthModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_3<L, R> extends _i1.SmartFake implements _i5.Either<L, R> {
  _FakeEither_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthEntity_4 extends _i1.SmartFake implements _i6.AuthEntity {
  _FakeAuthEntity_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthenticationContract_5 extends _i1.SmartFake
    implements _i7.AuthenticationContract {
  _FakeAuthenticationContract_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddNameToDatabase_6 extends _i1.SmartFake
    implements _i8.AddNameToDatabase {
  _FakeAddNameToDatabase_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReactiveContext_7 extends _i1.SmartFake
    implements _i9.ReactiveContext {
  _FakeReactiveContext_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddNameToDatabaseGetterStore_8 extends _i1.SmartFake
    implements _i10.AddNameToDatabaseGetterStore {
  _FakeAddNameToDatabaseGetterStore_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNameCreationStatusEntity_9 extends _i1.SmartFake
    implements _i11.NameCreationStatusEntity {
  _FakeNameCreationStatusEntity_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseFutureStore_10<T> extends _i1.SmartFake
    implements _i12.BaseFutureStore<T> {
  _FakeBaseFutureStore_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSignInWithApple_11 extends _i1.SmartFake
    implements _i13.SignInWithApple {
  _FakeSignInWithApple_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSignInWithGoogle_12 extends _i1.SmartFake
    implements _i14.SignInWithGoogle {
  _FakeSignInWithGoogle_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetAuthState_13 extends _i1.SmartFake implements _i15.GetAuthState {
  _FakeGetAuthState_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MAuthenticationRemoteSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockMAuthenticationRemoteSourceImpl extends _i1.Mock
    implements _i16.MAuthenticationRemoteSourceImpl {
  MockMAuthenticationRemoteSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SupabaseClient get supabase => (super.noSuchMethod(
        Invocation.getter(#supabase),
        returnValue: _FakeSupabaseClient_0(
          this,
          Invocation.getter(#supabase),
        ),
      ) as _i2.SupabaseClient);
  @override
  _i17.Future<_i3.AuthProviderModel> signInWithGoogle() => (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue:
            _i17.Future<_i3.AuthProviderModel>.value(_FakeAuthProviderModel_1(
          this,
          Invocation.method(
            #signInWithGoogle,
            [],
          ),
        )),
      ) as _i17.Future<_i3.AuthProviderModel>);
  @override
  _i17.Future<_i3.AuthProviderModel> signInWithApple() => (super.noSuchMethod(
        Invocation.method(
          #signInWithApple,
          [],
        ),
        returnValue:
            _i17.Future<_i3.AuthProviderModel>.value(_FakeAuthProviderModel_1(
          this,
          Invocation.method(
            #signInWithApple,
            [],
          ),
        )),
      ) as _i17.Future<_i3.AuthProviderModel>);
  @override
  _i4.AuthModel getAuthState() => (super.noSuchMethod(
        Invocation.method(
          #getAuthState,
          [],
        ),
        returnValue: _FakeAuthModel_2(
          this,
          Invocation.method(
            #getAuthState,
            [],
          ),
        ),
      ) as _i4.AuthModel);
  @override
  _i17.Future<List<dynamic>> addNamesToDatabase() => (super.noSuchMethod(
        Invocation.method(
          #addNamesToDatabase,
          [],
        ),
        returnValue: _i17.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i17.Future<List<dynamic>>);
}

/// A class which mocks [MRemoteSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMRemoteSource extends _i1.Mock implements _i16.MRemoteSource {
  MockMRemoteSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i17.Future<_i3.AuthProviderModel> signInWithGoogle() => (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue:
            _i17.Future<_i3.AuthProviderModel>.value(_FakeAuthProviderModel_1(
          this,
          Invocation.method(
            #signInWithGoogle,
            [],
          ),
        )),
      ) as _i17.Future<_i3.AuthProviderModel>);
  @override
  _i17.Future<_i3.AuthProviderModel> signInWithApple() => (super.noSuchMethod(
        Invocation.method(
          #signInWithApple,
          [],
        ),
        returnValue:
            _i17.Future<_i3.AuthProviderModel>.value(_FakeAuthProviderModel_1(
          this,
          Invocation.method(
            #signInWithApple,
            [],
          ),
        )),
      ) as _i17.Future<_i3.AuthProviderModel>);
  @override
  _i4.AuthModel getAuthState() => (super.noSuchMethod(
        Invocation.method(
          #getAuthState,
          [],
        ),
        returnValue: _FakeAuthModel_2(
          this,
          Invocation.method(
            #getAuthState,
            [],
          ),
        ),
      ) as _i4.AuthModel);
  @override
  _i17.Future<List<dynamic>> addNamesToDatabase() => (super.noSuchMethod(
        Invocation.method(
          #addNamesToDatabase,
          [],
        ),
        returnValue: _i17.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i17.Future<List<dynamic>>);
}

/// A class which mocks [MAuthenticationContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockMAuthenticationContract extends _i1.Mock
    implements _i16.MAuthenticationContract {
  MockMAuthenticationContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i17.Future<_i5.Either<_i18.Failure, _i19.AuthProviderEntity>>
      googleSignIn() => (super.noSuchMethod(
            Invocation.method(
              #googleSignIn,
              [],
            ),
            returnValue: _i17.Future<
                    _i5.Either<_i18.Failure, _i19.AuthProviderEntity>>.value(
                _FakeEither_3<_i18.Failure, _i19.AuthProviderEntity>(
              this,
              Invocation.method(
                #googleSignIn,
                [],
              ),
            )),
          ) as _i17.Future<_i5.Either<_i18.Failure, _i19.AuthProviderEntity>>);
  @override
  _i17.Future<_i5.Either<_i18.Failure, _i19.AuthProviderEntity>>
      appleSignIn() => (super.noSuchMethod(
            Invocation.method(
              #appleSignIn,
              [],
            ),
            returnValue: _i17.Future<
                    _i5.Either<_i18.Failure, _i19.AuthProviderEntity>>.value(
                _FakeEither_3<_i18.Failure, _i19.AuthProviderEntity>(
              this,
              Invocation.method(
                #appleSignIn,
                [],
              ),
            )),
          ) as _i17.Future<_i5.Either<_i18.Failure, _i19.AuthProviderEntity>>);
  @override
  _i6.AuthEntity getAuthState() => (super.noSuchMethod(
        Invocation.method(
          #getAuthState,
          [],
        ),
        returnValue: _FakeAuthEntity_4(
          this,
          Invocation.method(
            #getAuthState,
            [],
          ),
        ),
      ) as _i6.AuthEntity);
  @override
  _i17.Future<_i5.Either<_i18.Failure, _i11.NameCreationStatusEntity>>
      addNameToDatabase() => (super.noSuchMethod(
            Invocation.method(
              #addNameToDatabase,
              [],
            ),
            returnValue: _i17.Future<
                    _i5.Either<_i18.Failure,
                        _i11.NameCreationStatusEntity>>.value(
                _FakeEither_3<_i18.Failure, _i11.NameCreationStatusEntity>(
              this,
              Invocation.method(
                #addNameToDatabase,
                [],
              ),
            )),
          ) as _i17
              .Future<_i5.Either<_i18.Failure, _i11.NameCreationStatusEntity>>);
}

/// A class which mocks [MAddNameToDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockMAddNameToDatabase extends _i1.Mock
    implements _i16.MAddNameToDatabase {
  MockMAddNameToDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.AuthenticationContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeAuthenticationContract_5(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i7.AuthenticationContract);
  @override
  _i17.Future<_i5.Either<_i18.Failure, _i11.NameCreationStatusEntity>> call(
          _i20.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i17.Future<
                _i5.Either<_i18.Failure, _i11.NameCreationStatusEntity>>.value(
            _FakeEither_3<_i18.Failure, _i11.NameCreationStatusEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i17
          .Future<_i5.Either<_i18.Failure, _i11.NameCreationStatusEntity>>);
}

/// A class which mocks [MSignInWithGoogle].
///
/// See the documentation for Mockito's code generation for more information.
class MockMSignInWithGoogle extends _i1.Mock implements _i16.MSignInWithGoogle {
  MockMSignInWithGoogle() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.AuthenticationContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeAuthenticationContract_5(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i7.AuthenticationContract);
  @override
  _i17.Future<_i5.Either<_i18.Failure, _i19.AuthProviderEntity>> call(
          _i20.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i17.Future<
                _i5.Either<_i18.Failure, _i19.AuthProviderEntity>>.value(
            _FakeEither_3<_i18.Failure, _i19.AuthProviderEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i17.Future<_i5.Either<_i18.Failure, _i19.AuthProviderEntity>>);
}

/// A class which mocks [MSignInWithApple].
///
/// See the documentation for Mockito's code generation for more information.
class MockMSignInWithApple extends _i1.Mock implements _i16.MSignInWithApple {
  MockMSignInWithApple() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.AuthenticationContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeAuthenticationContract_5(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i7.AuthenticationContract);
  @override
  _i17.Future<_i5.Either<_i18.Failure, _i19.AuthProviderEntity>> call(
          _i20.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i17.Future<
                _i5.Either<_i18.Failure, _i19.AuthProviderEntity>>.value(
            _FakeEither_3<_i18.Failure, _i19.AuthProviderEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i17.Future<_i5.Either<_i18.Failure, _i19.AuthProviderEntity>>);
}

/// A class which mocks [MGetAuthState].
///
/// See the documentation for Mockito's code generation for more information.
class MockMGetAuthState extends _i1.Mock implements _i16.MGetAuthState {
  MockMGetAuthState() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.AuthenticationContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeAuthenticationContract_5(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i7.AuthenticationContract);
  @override
  _i6.AuthEntity call(_i20.NoParams? params) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _FakeAuthEntity_4(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        ),
      ) as _i6.AuthEntity);
}

/// A class which mocks [MAddNameToDatabaseGetterStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockMAddNameToDatabaseGetterStore extends _i1.Mock
    implements _i16.MAddNameToDatabaseGetterStore {
  MockMAddNameToDatabaseGetterStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.AddNameToDatabase get addNameLogic => (super.noSuchMethod(
        Invocation.getter(#addNameLogic),
        returnValue: _FakeAddNameToDatabase_6(
          this,
          Invocation.getter(#addNameLogic),
        ),
      ) as _i8.AddNameToDatabase);
  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
      ) as List<Object>);
  @override
  _i9.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_7(
          this,
          Invocation.getter(#context),
        ),
      ) as _i9.ReactiveContext);
  @override
  _i17.Future<_i5.Either<_i18.Failure, _i11.NameCreationStatusEntity>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i17.Future<
                _i5.Either<_i18.Failure, _i11.NameCreationStatusEntity>>.value(
            _FakeEither_3<_i18.Failure, _i11.NameCreationStatusEntity>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i17
          .Future<_i5.Either<_i18.Failure, _i11.NameCreationStatusEntity>>);
}

/// A class which mocks [MAddNameToDatabaseStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockMAddNameToDatabaseStore extends _i1.Mock
    implements _i16.MAddNameToDatabaseStore {
  MockMAddNameToDatabaseStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.AddNameToDatabaseGetterStore get addNameGetterStore =>
      (super.noSuchMethod(
        Invocation.getter(#addNameGetterStore),
        returnValue: _FakeAddNameToDatabaseGetterStore_8(
          this,
          Invocation.getter(#addNameGetterStore),
        ),
      ) as _i10.AddNameToDatabaseGetterStore);
  @override
  _i11.NameCreationStatusEntity get nameCreationStatus => (super.noSuchMethod(
        Invocation.getter(#nameCreationStatus),
        returnValue: _FakeNameCreationStatusEntity_9(
          this,
          Invocation.getter(#nameCreationStatus),
        ),
      ) as _i11.NameCreationStatusEntity);
  @override
  set nameCreationStatus(_i11.NameCreationStatusEntity? _nameCreationStatus) =>
      super.noSuchMethod(
        Invocation.setter(
          #nameCreationStatus,
          _nameCreationStatus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i12.BaseFutureStore<_i11.NameCreationStatusEntity> get futureStore =>
      (super.noSuchMethod(
        Invocation.getter(#futureStore),
        returnValue: _FakeBaseFutureStore_10<_i11.NameCreationStatusEntity>(
          this,
          Invocation.getter(#futureStore),
        ),
      ) as _i12.BaseFutureStore<_i11.NameCreationStatusEntity>);
  @override
  set futureStore(_i12.BaseFutureStore<_i11.NameCreationStatusEntity>? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #futureStore,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
      ) as List<Object>);
  @override
  _i21.StoreState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i21.StoreState.initial,
      ) as _i21.StoreState);
  @override
  set state(_i21.StoreState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: '',
      ) as String);
  @override
  set errorMessage(String? value) => super.noSuchMethod(
        Invocation.setter(
          #errorMessage,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_7(
          this,
          Invocation.getter(#context),
        ),
      ) as _i9.ReactiveContext);
  @override
  void stateOrErrorUpdater(
          _i5.Either<_i18.Failure, _i11.NameCreationStatusEntity>? result) =>
      super.noSuchMethod(
        Invocation.method(
          #stateOrErrorUpdater,
          [result],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i17.Future<void> call(_i20.NoParams? params) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);
  @override
  String mapFailureToMessage(_i18.Failure? failure) => (super.noSuchMethod(
        Invocation.method(
          #mapFailureToMessage,
          [failure],
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [MGetAuthProviderStateStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockMGetAuthProviderStateStore extends _i1.Mock
    implements _i16.MGetAuthProviderStateStore {
  MockMGetAuthProviderStateStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.SignInWithApple get appleSignInLogic => (super.noSuchMethod(
        Invocation.getter(#appleSignInLogic),
        returnValue: _FakeSignInWithApple_11(
          this,
          Invocation.getter(#appleSignInLogic),
        ),
      ) as _i13.SignInWithApple);
  @override
  _i14.SignInWithGoogle get googleSignInLogic => (super.noSuchMethod(
        Invocation.getter(#googleSignInLogic),
        returnValue: _FakeSignInWithGoogle_12(
          this,
          Invocation.getter(#googleSignInLogic),
        ),
      ) as _i14.SignInWithGoogle);
  @override
  _i21.StoreState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i21.StoreState.initial,
      ) as _i21.StoreState);
  @override
  set state(_i21.StoreState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
      ) as List<Object>);
  @override
  _i9.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_7(
          this,
          Invocation.getter(#context),
        ),
      ) as _i9.ReactiveContext);
  @override
  _i17.Future<_i5.Either<_i18.Failure, _i19.AuthProviderEntity>> call(
          _i22.AuthProvider? authProvider) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [authProvider],
        ),
        returnValue: _i17.Future<
                _i5.Either<_i18.Failure, _i19.AuthProviderEntity>>.value(
            _FakeEither_3<_i18.Failure, _i19.AuthProviderEntity>(
          this,
          Invocation.method(
            #call,
            [authProvider],
          ),
        )),
      ) as _i17.Future<_i5.Either<_i18.Failure, _i19.AuthProviderEntity>>);
}

/// A class which mocks [MGetAuthStateStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockMGetAuthStateStore extends _i1.Mock
    implements _i16.MGetAuthStateStore {
  MockMGetAuthStateStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.GetAuthState get getAuthState => (super.noSuchMethod(
        Invocation.getter(#getAuthState),
        returnValue: _FakeGetAuthState_13(
          this,
          Invocation.getter(#getAuthState),
        ),
      ) as _i15.GetAuthState);
  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
      ) as List<Object>);
  @override
  _i9.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_7(
          this,
          Invocation.getter(#context),
        ),
      ) as _i9.ReactiveContext);
  @override
  _i17.Stream<bool> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i17.Stream<bool>.empty(),
      ) as _i17.Stream<bool>);
}
