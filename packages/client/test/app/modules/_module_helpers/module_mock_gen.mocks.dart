// Mocks generated by Mockito 5.4.1 from annotations
// in primala/test/app/modules/_module_helpers/module_mock_gen.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:connectivity_plus/connectivity_plus.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:supabase_flutter/supabase_flutter.dart' as _i2;

import 'module_mock_gen.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGoTrueClient_0 extends _i1.SmartFake implements _i2.GoTrueClient {
  _FakeGoTrueClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFunctionsClient_1 extends _i1.SmartFake
    implements _i2.FunctionsClient {
  _FakeFunctionsClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseStorageClient_2 extends _i1.SmartFake
    implements _i2.SupabaseStorageClient {
  _FakeSupabaseStorageClient_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeClient_3 extends _i1.SmartFake
    implements _i2.RealtimeClient {
  _FakeRealtimeClient_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestClient_4 extends _i1.SmartFake
    implements _i2.PostgrestClient {
  _FakePostgrestClient_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseQueryBuilder_5 extends _i1.SmartFake
    implements _i2.SupabaseQueryBuilder {
  _FakeSupabaseQueryBuilder_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestFilterBuilder_6<T> extends _i1.SmartFake
    implements _i2.PostgrestFilterBuilder<T> {
  _FakePostgrestFilterBuilder_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeChannel_7 extends _i1.SmartFake
    implements _i2.RealtimeChannel {
  _FakeRealtimeChannel_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MNetworkInfoImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockMNetworkInfoImpl extends _i1.Mock implements _i3.MNetworkInfoImpl {
  MockMNetworkInfoImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [MConnectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockMConnectivity extends _i1.Mock implements _i3.MConnectivity {
  MockMConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i5.ConnectivityResult> get onConnectivityChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onConnectivityChanged),
        returnValue: _i4.Stream<_i5.ConnectivityResult>.empty(),
      ) as _i4.Stream<_i5.ConnectivityResult>);
  @override
  _i4.Future<_i5.ConnectivityResult> checkConnectivity() => (super.noSuchMethod(
        Invocation.method(
          #checkConnectivity,
          [],
        ),
        returnValue: _i4.Future<_i5.ConnectivityResult>.value(
            _i5.ConnectivityResult.bluetooth),
      ) as _i4.Future<_i5.ConnectivityResult>);
}

/// A class which mocks [MSupabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockMSupabaseClient extends _i1.Mock implements _i3.MSupabaseClient {
  MockMSupabaseClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get supabaseUrl => (super.noSuchMethod(
        Invocation.getter(#supabaseUrl),
        returnValue: '',
      ) as String);
  @override
  String get supabaseKey => (super.noSuchMethod(
        Invocation.getter(#supabaseKey),
        returnValue: '',
      ) as String);
  @override
  String get schema => (super.noSuchMethod(
        Invocation.getter(#schema),
        returnValue: '',
      ) as String);
  @override
  String get restUrl => (super.noSuchMethod(
        Invocation.getter(#restUrl),
        returnValue: '',
      ) as String);
  @override
  String get realtimeUrl => (super.noSuchMethod(
        Invocation.getter(#realtimeUrl),
        returnValue: '',
      ) as String);
  @override
  String get authUrl => (super.noSuchMethod(
        Invocation.getter(#authUrl),
        returnValue: '',
      ) as String);
  @override
  String get storageUrl => (super.noSuchMethod(
        Invocation.getter(#storageUrl),
        returnValue: '',
      ) as String);
  @override
  String get functionsUrl => (super.noSuchMethod(
        Invocation.getter(#functionsUrl),
        returnValue: '',
      ) as String);
  @override
  _i2.GoTrueClient get auth => (super.noSuchMethod(
        Invocation.getter(#auth),
        returnValue: _FakeGoTrueClient_0(
          this,
          Invocation.getter(#auth),
        ),
      ) as _i2.GoTrueClient);
  @override
  set auth(_i2.GoTrueClient? _auth) => super.noSuchMethod(
        Invocation.setter(
          #auth,
          _auth,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.FunctionsClient get functions => (super.noSuchMethod(
        Invocation.getter(#functions),
        returnValue: _FakeFunctionsClient_1(
          this,
          Invocation.getter(#functions),
        ),
      ) as _i2.FunctionsClient);
  @override
  set functions(_i2.FunctionsClient? _functions) => super.noSuchMethod(
        Invocation.setter(
          #functions,
          _functions,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.SupabaseStorageClient get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeSupabaseStorageClient_2(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i2.SupabaseStorageClient);
  @override
  set storage(_i2.SupabaseStorageClient? _storage) => super.noSuchMethod(
        Invocation.setter(
          #storage,
          _storage,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.RealtimeClient get realtime => (super.noSuchMethod(
        Invocation.getter(#realtime),
        returnValue: _FakeRealtimeClient_3(
          this,
          Invocation.getter(#realtime),
        ),
      ) as _i2.RealtimeClient);
  @override
  set realtime(_i2.RealtimeClient? _realtime) => super.noSuchMethod(
        Invocation.setter(
          #realtime,
          _realtime,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.PostgrestClient get rest => (super.noSuchMethod(
        Invocation.getter(#rest),
        returnValue: _FakePostgrestClient_4(
          this,
          Invocation.getter(#rest),
        ),
      ) as _i2.PostgrestClient);
  @override
  set rest(_i2.PostgrestClient? _rest) => super.noSuchMethod(
        Invocation.setter(
          #rest,
          _rest,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
      ) as Map<String, String>);
  @override
  set headers(Map<String, String>? headers) => super.noSuchMethod(
        Invocation.setter(
          #headers,
          headers,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.SupabaseQueryBuilder from(String? table) => (super.noSuchMethod(
        Invocation.method(
          #from,
          [table],
        ),
        returnValue: _FakeSupabaseQueryBuilder_5(
          this,
          Invocation.method(
            #from,
            [table],
          ),
        ),
      ) as _i2.SupabaseQueryBuilder);
  @override
  _i2.PostgrestFilterBuilder<dynamic> rpc(
    String? fn, {
    Map<String, dynamic>? params,
    _i2.FetchOptions? options = const _i2.FetchOptions(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rpc,
          [fn],
          {
            #params: params,
            #options: options,
          },
        ),
        returnValue: _FakePostgrestFilterBuilder_6<dynamic>(
          this,
          Invocation.method(
            #rpc,
            [fn],
            {
              #params: params,
              #options: options,
            },
          ),
        ),
      ) as _i2.PostgrestFilterBuilder<dynamic>);
  @override
  _i2.RealtimeChannel channel(
    String? name, {
    _i2.RealtimeChannelConfig? opts = const _i2.RealtimeChannelConfig(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #channel,
          [name],
          {#opts: opts},
        ),
        returnValue: _FakeRealtimeChannel_7(
          this,
          Invocation.method(
            #channel,
            [name],
            {#opts: opts},
          ),
        ),
      ) as _i2.RealtimeChannel);
  @override
  List<_i2.RealtimeChannel> getChannels() => (super.noSuchMethod(
        Invocation.method(
          #getChannels,
          [],
        ),
        returnValue: <_i2.RealtimeChannel>[],
      ) as List<_i2.RealtimeChannel>);
  @override
  _i4.Future<String> removeChannel(_i2.RealtimeChannel? channel) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeChannel,
          [channel],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<List<String>> removeAllChannels() => (super.noSuchMethod(
        Invocation.method(
          #removeAllChannels,
          [],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);
  @override
  _i4.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
