// Mocks generated by Mockito 5.4.0 from annotations
// in primala/test/app/modules/p2p_request_sender/fixtures/p2p_request_sender_mock_gen.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes, must_be_immutable
import 'dart:async' as _i9;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mobx/mobx.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:primala/app/core/error/failure.dart' as _i10;
import 'package:primala/app/modules/p2p_request_sender/domain/contracts/p2p_request_sender_contract.dart'
    as _i3;
import 'package:primala/app/modules/p2p_request_sender/domain/entities/p2p_request_recipient_entity.dart'
    as _i12;
import 'package:primala/app/modules/p2p_request_sender/domain/entities/p2p_request_sender_status_entity.dart'
    as _i11;
import 'package:primala/app/modules/p2p_request_sender/domain/logic/send_a_request.dart'
    as _i6;
import 'package:primala/app/modules/p2p_request_sender/domain/logic/validate_request.dart'
    as _i4;
import 'package:supabase_flutter/supabase_flutter.dart' as _i7;

import 'p2p_request_sender_mock_gen.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeP2PRequestSenderContract_1 extends _i1.SmartFake
    implements _i3.P2PRequestSenderContract {
  _FakeP2PRequestSenderContract_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeValidateRequest_2 extends _i1.SmartFake
    implements _i4.ValidateRequest {
  _FakeValidateRequest_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReactiveContext_3 extends _i1.SmartFake
    implements _i5.ReactiveContext {
  _FakeReactiveContext_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSendARequest_4 extends _i1.SmartFake implements _i6.SendARequest {
  _FakeSendARequest_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseClient_5 extends _i1.SmartFake
    implements _i7.SupabaseClient {
  _FakeSupabaseClient_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MP2PRequestSenderContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockMP2PRequestSenderContract extends _i1.Mock
    implements _i8.MP2PRequestSenderContract {
  MockMP2PRequestSenderContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Either<_i10.Failure, _i11.P2PRequestSenderStatusEntity>>
      sendARequest(String? receiverUsername) => (super.noSuchMethod(
            Invocation.method(
              #sendARequest,
              [receiverUsername],
            ),
            returnValue: _i9.Future<
                    _i2.Either<_i10.Failure,
                        _i11.P2PRequestSenderStatusEntity>>.value(
                _FakeEither_0<_i10.Failure, _i11.P2PRequestSenderStatusEntity>(
              this,
              Invocation.method(
                #sendARequest,
                [receiverUsername],
              ),
            )),
          ) as _i9.Future<
              _i2.Either<_i10.Failure, _i11.P2PRequestSenderStatusEntity>>);
  @override
  _i9.Future<
      _i2.Either<_i10.Failure, _i12.P2PRequestRecipientEntity>> validateRequest(
          String? receiverUsername) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateRequest,
          [receiverUsername],
        ),
        returnValue: _i9.Future<
                _i2.Either<_i10.Failure, _i12.P2PRequestRecipientEntity>>.value(
            _FakeEither_0<_i10.Failure, _i12.P2PRequestRecipientEntity>(
          this,
          Invocation.method(
            #validateRequest,
            [receiverUsername],
          ),
        )),
      ) as _i9
          .Future<_i2.Either<_i10.Failure, _i12.P2PRequestRecipientEntity>>);
}

/// A class which mocks [MP2PRequestSenderRemoteSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMP2PRequestSenderRemoteSource extends _i1.Mock
    implements _i8.MP2PRequestSenderRemoteSource {
  MockMP2PRequestSenderRemoteSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<List<dynamic>> checkIfRecipientExists(String? username) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkIfRecipientExists,
          [username],
        ),
        returnValue: _i9.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i9.Future<List<dynamic>>);
  @override
  _i9.Future<List<dynamic>> sendARequest(String? username) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendARequest,
          [username],
        ),
        returnValue: _i9.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i9.Future<List<dynamic>>);
  @override
  _i9.Future<List<dynamic>> checkForRecipientDuplicate(String? username) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkForRecipientDuplicate,
          [username],
        ),
        returnValue: _i9.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i9.Future<List<dynamic>>);
  @override
  _i9.Future<List<dynamic>> checkForSenderDuplicate(String? username) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkForSenderDuplicate,
          [username],
        ),
        returnValue: _i9.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i9.Future<List<dynamic>>);
}

/// A class which mocks [MValidateRequest].
///
/// See the documentation for Mockito's code generation for more information.
class MockMValidateRequest extends _i1.Mock implements _i8.MValidateRequest {
  MockMValidateRequest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.P2PRequestSenderContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeP2PRequestSenderContract_1(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i3.P2PRequestSenderContract);
  @override
  _i9.Future<_i2.Either<_i10.Failure, _i12.P2PRequestRecipientEntity>> call(
          _i4.P2PReqRecipientParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i9.Future<
                _i2.Either<_i10.Failure, _i12.P2PRequestRecipientEntity>>.value(
            _FakeEither_0<_i10.Failure, _i12.P2PRequestRecipientEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i9
          .Future<_i2.Either<_i10.Failure, _i12.P2PRequestRecipientEntity>>);
}

/// A class which mocks [MSendARequest].
///
/// See the documentation for Mockito's code generation for more information.
class MockMSendARequest extends _i1.Mock implements _i8.MSendARequest {
  MockMSendARequest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.P2PRequestSenderContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeP2PRequestSenderContract_1(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i3.P2PRequestSenderContract);
  @override
  _i9.Future<_i2.Either<_i10.Failure, _i11.P2PRequestSenderStatusEntity>> call(
          _i6.P2PSendReqParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i9.Future<
                _i2.Either<_i10.Failure,
                    _i11.P2PRequestSenderStatusEntity>>.value(
            _FakeEither_0<_i10.Failure, _i11.P2PRequestSenderStatusEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i9
          .Future<_i2.Either<_i10.Failure, _i11.P2PRequestSenderStatusEntity>>);
}

/// A class which mocks [MValidateRequestGetterStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockMValidateRequestGetterStore extends _i1.Mock
    implements _i8.MValidateRequestGetterStore {
  MockMValidateRequestGetterStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.ValidateRequest get validateRequestLogic => (super.noSuchMethod(
        Invocation.getter(#validateRequestLogic),
        returnValue: _FakeValidateRequest_2(
          this,
          Invocation.getter(#validateRequestLogic),
        ),
      ) as _i4.ValidateRequest);
  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
      ) as List<Object>);
  @override
  _i5.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_3(
          this,
          Invocation.getter(#context),
        ),
      ) as _i5.ReactiveContext);
  @override
  _i9.Future<_i2.Either<_i10.Failure, _i12.P2PRequestRecipientEntity>> call(
          String? username) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [username],
        ),
        returnValue: _i9.Future<
                _i2.Either<_i10.Failure, _i12.P2PRequestRecipientEntity>>.value(
            _FakeEither_0<_i10.Failure, _i12.P2PRequestRecipientEntity>(
          this,
          Invocation.method(
            #call,
            [username],
          ),
        )),
      ) as _i9
          .Future<_i2.Either<_i10.Failure, _i12.P2PRequestRecipientEntity>>);
}

/// A class which mocks [MSendARequestGetterStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockMSendARequestGetterStore extends _i1.Mock
    implements _i8.MSendARequestGetterStore {
  MockMSendARequestGetterStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SendARequest get sendARequestLogic => (super.noSuchMethod(
        Invocation.getter(#sendARequestLogic),
        returnValue: _FakeSendARequest_4(
          this,
          Invocation.getter(#sendARequestLogic),
        ),
      ) as _i6.SendARequest);
  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
      ) as List<Object>);
  @override
  _i5.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_3(
          this,
          Invocation.getter(#context),
        ),
      ) as _i5.ReactiveContext);
  @override
  _i9.Future<_i2.Either<_i10.Failure, _i11.P2PRequestSenderStatusEntity>> call(
          String? username) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [username],
        ),
        returnValue: _i9.Future<
                _i2.Either<_i10.Failure,
                    _i11.P2PRequestSenderStatusEntity>>.value(
            _FakeEither_0<_i10.Failure, _i11.P2PRequestSenderStatusEntity>(
          this,
          Invocation.method(
            #call,
            [username],
          ),
        )),
      ) as _i9
          .Future<_i2.Either<_i10.Failure, _i11.P2PRequestSenderStatusEntity>>);
}

/// A class which mocks [MP2PRequestSenderRemoteSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockMP2PRequestSenderRemoteSourceImpl extends _i1.Mock
    implements _i8.MP2PRequestSenderRemoteSourceImpl {
  MockMP2PRequestSenderRemoteSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.SupabaseClient get supabase => (super.noSuchMethod(
        Invocation.getter(#supabase),
        returnValue: _FakeSupabaseClient_5(
          this,
          Invocation.getter(#supabase),
        ),
      ) as _i7.SupabaseClient);
  @override
  String get currentUserId => (super.noSuchMethod(
        Invocation.getter(#currentUserId),
        returnValue: '',
      ) as String);
  @override
  _i9.Future<List<dynamic>> checkIfRecipientExists(String? username) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkIfRecipientExists,
          [username],
        ),
        returnValue: _i9.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i9.Future<List<dynamic>>);
  @override
  _i9.Future<List<dynamic>> checkForRecipientDuplicate(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkForRecipientDuplicate,
          [uid],
        ),
        returnValue: _i9.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i9.Future<List<dynamic>>);
  @override
  _i9.Future<List<dynamic>> checkForSenderDuplicate(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkForSenderDuplicate,
          [uid],
        ),
        returnValue: _i9.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i9.Future<List<dynamic>>);
  @override
  _i9.Future<List<dynamic>> sendARequest(String? username) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendARequest,
          [username],
        ),
        returnValue: _i9.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i9.Future<List<dynamic>>);
}
