// Mocks generated by Mockito 5.4.4 from annotations
// in nokhte/test/app/modules/home/fixtures/home_stack_mock_gen.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i17;

import 'package:dartz/dartz.dart' as _i9;
import 'package:flutter_branch_sdk/flutter_branch_sdk.dart' as _i7;
import 'package:mobx/mobx.dart' as _i14;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i22;
import 'package:nokhte/app/core/error/failure.dart' as _i18;
import 'package:nokhte/app/core/interfaces/logic.dart' as _i19;
import 'package:nokhte/app/core/mobx/base_future_store.dart' as _i13;
import 'package:nokhte/app/core/mobx/store_state.dart' as _i21;
import 'package:nokhte/app/core/types/types.dart' as _i27;
import 'package:nokhte/app/core/widgets/widgets.dart' as _i15;
import 'package:nokhte/app/modules/home/data/sources/home_remote_source.dart'
    as _i16;
import 'package:nokhte/app/modules/home/domain/contracts/home_contract.dart'
    as _i10;
import 'package:nokhte/app/modules/home/domain/domain.dart' as _i11;
import 'package:nokhte/app/modules/home/domain/entities/entities.dart' as _i12;
import 'package:nokhte/app/modules/home/presentation/mobx/coordinators/home_screen_widgets_coordinator.dart'
    as _i26;
import 'package:nokhte/app/modules/home/presentation/mobx/main/add_name_to_database_store.dart'
    as _i20;
import 'package:nokhte/app/modules/home/presentation/mobx/main/get_collaborator_phrase_store.dart'
    as _i25;
import 'package:nokhte/app/modules/home/presentation/mobx/main/get_existing_collaborations_info_store.dart'
    as _i23;
import 'package:nokhte/app/modules/home/presentation/mobx/main/share_collaboration_invitation_store.dart'
    as _i24;
import 'package:nokhte_backend/tables/collaborator_phrases.dart' as _i6;
import 'package:nokhte_backend/tables/existing_collaborations.dart' as _i3;
import 'package:nokhte_backend/tables/finished_collaborative_documents.dart'
    as _i5;
import 'package:nokhte_backend/tables/p2p_perspectives_tracking.dart' as _i4;
import 'package:share_plus/share_plus.dart' as _i8;
import 'package:supabase_flutter/supabase_flutter.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSupabaseClient_0 extends _i1.SmartFake
    implements _i2.SupabaseClient {
  _FakeSupabaseClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExistingCollaborationsQueries_1 extends _i1.SmartFake
    implements _i3.ExistingCollaborationsQueries {
  _FakeExistingCollaborationsQueries_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeP2PPerspectivesTrackingQueries_2 extends _i1.SmartFake
    implements _i4.P2PPerspectivesTrackingQueries {
  _FakeP2PPerspectivesTrackingQueries_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFinishedCollaborativeDocumentsQueries_3 extends _i1.SmartFake
    implements _i5.FinishedCollaborativeDocumentsQueries {
  _FakeFinishedCollaborativeDocumentsQueries_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollaboratorPhraseQueries_4 extends _i1.SmartFake
    implements _i6.CollaboratorPhraseQueries {
  _FakeCollaboratorPhraseQueries_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBranchResponse_5<T> extends _i1.SmartFake
    implements _i7.BranchResponse<T> {
  _FakeBranchResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeShareResult_6 extends _i1.SmartFake implements _i8.ShareResult {
  _FakeShareResult_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_7<L, R> extends _i1.SmartFake implements _i9.Either<L, R> {
  _FakeEither_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHomeContract_8 extends _i1.SmartFake implements _i10.HomeContract {
  _FakeHomeContract_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddNameToDatabase_9 extends _i1.SmartFake
    implements _i11.AddNameToDatabase {
  _FakeAddNameToDatabase_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNameCreationStatusEntity_10 extends _i1.SmartFake
    implements _i12.NameCreationStatusEntity {
  _FakeNameCreationStatusEntity_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseFutureStore_11<T> extends _i1.SmartFake
    implements _i13.BaseFutureStore<T> {
  _FakeBaseFutureStore_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReactiveContext_12 extends _i1.SmartFake
    implements _i14.ReactiveContext {
  _FakeReactiveContext_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetExistingCollaborationsInfo_13 extends _i1.SmartFake
    implements _i11.GetExistingCollaborationsInfo {
  _FakeGetExistingCollaborationsInfo_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeShareCollaborationInvitation_14 extends _i1.SmartFake
    implements _i11.ShareCollaborationInvitation {
  _FakeShareCollaborationInvitation_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetCollaboratorPhrase_15 extends _i1.SmartFake
    implements _i11.GetCollaboratorPhrase {
  _FakeGetCollaboratorPhrase_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollaboratorPhraseEntity_16 extends _i1.SmartFake
    implements _i12.CollaboratorPhraseEntity {
  _FakeCollaboratorPhraseEntity_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTimeAlignmentModelCoordinator_17 extends _i1.SmartFake
    implements _i15.TimeAlignmentModelCoordinator {
  _FakeTimeAlignmentModelCoordinator_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNokhteBlurStore_18 extends _i1.SmartFake
    implements _i15.NokhteBlurStore {
  _FakeNokhteBlurStore_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBeachWavesStore_19 extends _i1.SmartFake
    implements _i15.BeachWavesStore {
  _FakeBeachWavesStore_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWifiDisconnectOverlayStore_20 extends _i1.SmartFake
    implements _i15.WifiDisconnectOverlayStore {
  _FakeWifiDisconnectOverlayStore_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGestureCrossStore_21 extends _i1.SmartFake
    implements _i15.GestureCrossStore {
  _FakeGestureCrossStore_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSmartTextStore_22 extends _i1.SmartFake
    implements _i15.SmartTextStore {
  _FakeSmartTextStore_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGradientTreeNodeStore_23 extends _i1.SmartFake
    implements _i15.GradientTreeNodeStore {
  _FakeGradientTreeNodeStore_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeRemoteSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRemoteSourceImpl extends _i1.Mock
    implements _i16.HomeRemoteSourceImpl {
  @override
  _i2.SupabaseClient get supabase => (super.noSuchMethod(
        Invocation.getter(#supabase),
        returnValue: _FakeSupabaseClient_0(
          this,
          Invocation.getter(#supabase),
        ),
        returnValueForMissingStub: _FakeSupabaseClient_0(
          this,
          Invocation.getter(#supabase),
        ),
      ) as _i2.SupabaseClient);

  @override
  _i3.ExistingCollaborationsQueries get existingCollaborationsQueries =>
      (super.noSuchMethod(
        Invocation.getter(#existingCollaborationsQueries),
        returnValue: _FakeExistingCollaborationsQueries_1(
          this,
          Invocation.getter(#existingCollaborationsQueries),
        ),
        returnValueForMissingStub: _FakeExistingCollaborationsQueries_1(
          this,
          Invocation.getter(#existingCollaborationsQueries),
        ),
      ) as _i3.ExistingCollaborationsQueries);

  @override
  _i4.P2PPerspectivesTrackingQueries get perspectivesQueries =>
      (super.noSuchMethod(
        Invocation.getter(#perspectivesQueries),
        returnValue: _FakeP2PPerspectivesTrackingQueries_2(
          this,
          Invocation.getter(#perspectivesQueries),
        ),
        returnValueForMissingStub: _FakeP2PPerspectivesTrackingQueries_2(
          this,
          Invocation.getter(#perspectivesQueries),
        ),
      ) as _i4.P2PPerspectivesTrackingQueries);

  @override
  _i5.FinishedCollaborativeDocumentsQueries
      get finishedCollaborativeP2PPurposeDocumentsQueries =>
          (super.noSuchMethod(
            Invocation.getter(#finishedCollaborativeP2PPurposeDocumentsQueries),
            returnValue: _FakeFinishedCollaborativeDocumentsQueries_3(
              this,
              Invocation.getter(
                  #finishedCollaborativeP2PPurposeDocumentsQueries),
            ),
            returnValueForMissingStub:
                _FakeFinishedCollaborativeDocumentsQueries_3(
              this,
              Invocation.getter(
                  #finishedCollaborativeP2PPurposeDocumentsQueries),
            ),
          ) as _i5.FinishedCollaborativeDocumentsQueries);

  @override
  _i6.CollaboratorPhraseQueries get collaboratorPhraseQueries =>
      (super.noSuchMethod(
        Invocation.getter(#collaboratorPhraseQueries),
        returnValue: _FakeCollaboratorPhraseQueries_4(
          this,
          Invocation.getter(#collaboratorPhraseQueries),
        ),
        returnValueForMissingStub: _FakeCollaboratorPhraseQueries_4(
          this,
          Invocation.getter(#collaboratorPhraseQueries),
        ),
      ) as _i6.CollaboratorPhraseQueries);

  @override
  _i17.Future<List<dynamic>> addNamesToDatabase({String? theName = r''}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNamesToDatabase,
          [],
          {#theName: theName},
        ),
        returnValue: _i17.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub:
            _i17.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i17.Future<List<dynamic>>);

  @override
  _i17.Future<List<dynamic>> getCollaboratorPhrase() => (super.noSuchMethod(
        Invocation.method(
          #getCollaboratorPhrase,
          [],
        ),
        returnValue: _i17.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub:
            _i17.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i17.Future<List<dynamic>>);

  @override
  _i17.Future<List<dynamic>> checkIfTheyHaveACollaboration() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkIfTheyHaveACollaboration,
          [],
        ),
        returnValue: _i17.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub:
            _i17.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i17.Future<List<dynamic>>);

  @override
  _i17.Future<List<dynamic>> checkIfTheyHaveDonePerspectives() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkIfTheyHaveDonePerspectives,
          [],
        ),
        returnValue: _i17.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub:
            _i17.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i17.Future<List<dynamic>>);

  @override
  _i17.Future<List<dynamic>> checkIfTheyHaveCommittedAPurpose() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkIfTheyHaveCommittedAPurpose,
          [],
        ),
        returnValue: _i17.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub:
            _i17.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i17.Future<List<dynamic>>);

  @override
  _i17.Future<_i7.BranchResponse<dynamic>> getInvitationURL() =>
      (super.noSuchMethod(
        Invocation.method(
          #getInvitationURL,
          [],
        ),
        returnValue: _i17.Future<_i7.BranchResponse<dynamic>>.value(
            _FakeBranchResponse_5<dynamic>(
          this,
          Invocation.method(
            #getInvitationURL,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i7.BranchResponse<dynamic>>.value(
                _FakeBranchResponse_5<dynamic>(
          this,
          Invocation.method(
            #getInvitationURL,
            [],
          ),
        )),
      ) as _i17.Future<_i7.BranchResponse<dynamic>>);

  @override
  _i17.Future<_i8.ShareResult> shareCollaborationInvitation(
          String? invitationURL) =>
      (super.noSuchMethod(
        Invocation.method(
          #shareCollaborationInvitation,
          [invitationURL],
        ),
        returnValue: _i17.Future<_i8.ShareResult>.value(_FakeShareResult_6(
          this,
          Invocation.method(
            #shareCollaborationInvitation,
            [invitationURL],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i8.ShareResult>.value(_FakeShareResult_6(
          this,
          Invocation.method(
            #shareCollaborationInvitation,
            [invitationURL],
          ),
        )),
      ) as _i17.Future<_i8.ShareResult>);
}

/// A class which mocks [HomeContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeContract extends _i1.Mock implements _i10.HomeContract {
  @override
  _i17.Future<_i9.Either<_i18.Failure, _i12.NameCreationStatusEntity>>
      addNameToDatabase(_i19.NoParams? params) => (super.noSuchMethod(
            Invocation.method(
              #addNameToDatabase,
              [params],
            ),
            returnValue: _i17.Future<
                    _i9
                    .Either<_i18.Failure, _i12.NameCreationStatusEntity>>.value(
                _FakeEither_7<_i18.Failure, _i12.NameCreationStatusEntity>(
              this,
              Invocation.method(
                #addNameToDatabase,
                [params],
              ),
            )),
            returnValueForMissingStub: _i17.Future<
                    _i9
                    .Either<_i18.Failure, _i12.NameCreationStatusEntity>>.value(
                _FakeEither_7<_i18.Failure, _i12.NameCreationStatusEntity>(
              this,
              Invocation.method(
                #addNameToDatabase,
                [params],
              ),
            )),
          ) as _i17
              .Future<_i9.Either<_i18.Failure, _i12.NameCreationStatusEntity>>);

  @override
  _i17.Future<_i9.Either<_i18.Failure, _i12.CollaboratorPhraseEntity>>
      getCollaboratorPhrase(_i19.NoParams? params) => (super.noSuchMethod(
            Invocation.method(
              #getCollaboratorPhrase,
              [params],
            ),
            returnValue: _i17.Future<
                    _i9
                    .Either<_i18.Failure, _i12.CollaboratorPhraseEntity>>.value(
                _FakeEither_7<_i18.Failure, _i12.CollaboratorPhraseEntity>(
              this,
              Invocation.method(
                #getCollaboratorPhrase,
                [params],
              ),
            )),
            returnValueForMissingStub: _i17.Future<
                    _i9
                    .Either<_i18.Failure, _i12.CollaboratorPhraseEntity>>.value(
                _FakeEither_7<_i18.Failure, _i12.CollaboratorPhraseEntity>(
              this,
              Invocation.method(
                #getCollaboratorPhrase,
                [params],
              ),
            )),
          ) as _i17
              .Future<_i9.Either<_i18.Failure, _i12.CollaboratorPhraseEntity>>);

  @override
  _i17.Future<_i9.Either<_i18.Failure, _i12.ExistingCollaborationsInfoEntity>>
      getExistingCollaborationInfo(_i19.NoParams? params) =>
          (super.noSuchMethod(
            Invocation.method(
              #getExistingCollaborationInfo,
              [params],
            ),
            returnValue: _i17.Future<
                _i9.Either<_i18.Failure,
                    _i12.ExistingCollaborationsInfoEntity>>.value(_FakeEither_7<
                _i18.Failure, _i12.ExistingCollaborationsInfoEntity>(
              this,
              Invocation.method(
                #getExistingCollaborationInfo,
                [params],
              ),
            )),
            returnValueForMissingStub: _i17.Future<
                _i9.Either<_i18.Failure,
                    _i12.ExistingCollaborationsInfoEntity>>.value(_FakeEither_7<
                _i18.Failure, _i12.ExistingCollaborationsInfoEntity>(
              this,
              Invocation.method(
                #getExistingCollaborationInfo,
                [params],
              ),
            )),
          ) as _i17.Future<
              _i9.Either<_i18.Failure, _i12.ExistingCollaborationsInfoEntity>>);

  @override
  _i17.Future<
          _i9
          .Either<_i18.Failure, _i12.CollaborationInvitationSendStatusEntity>>
      shareCollaborationInvitation(String? link) => (super.noSuchMethod(
            Invocation.method(
              #shareCollaborationInvitation,
              [link],
            ),
            returnValue: _i17.Future<
                    _i9.Either<_i18.Failure,
                        _i12.CollaborationInvitationSendStatusEntity>>.value(
                _FakeEither_7<_i18.Failure,
                    _i12.CollaborationInvitationSendStatusEntity>(
              this,
              Invocation.method(
                #shareCollaborationInvitation,
                [link],
              ),
            )),
            returnValueForMissingStub: _i17.Future<
                    _i9.Either<_i18.Failure,
                        _i12.CollaborationInvitationSendStatusEntity>>.value(
                _FakeEither_7<_i18.Failure,
                    _i12.CollaborationInvitationSendStatusEntity>(
              this,
              Invocation.method(
                #shareCollaborationInvitation,
                [link],
              ),
            )),
          ) as _i17.Future<
              _i9.Either<_i18.Failure,
                  _i12.CollaborationInvitationSendStatusEntity>>);

  @override
  _i17.Future<_i9.Either<_i18.Failure, _i12.CollaborationInvitationDataEntity>>
      getInvitationURL(_i19.NoParams? params) => (super.noSuchMethod(
            Invocation.method(
              #getInvitationURL,
              [params],
            ),
            returnValue: _i17.Future<
                    _i9.Either<_i18.Failure,
                        _i12.CollaborationInvitationDataEntity>>.value(
                _FakeEither_7<_i18.Failure,
                    _i12.CollaborationInvitationDataEntity>(
              this,
              Invocation.method(
                #getInvitationURL,
                [params],
              ),
            )),
            returnValueForMissingStub: _i17.Future<
                    _i9.Either<_i18.Failure,
                        _i12.CollaborationInvitationDataEntity>>.value(
                _FakeEither_7<_i18.Failure,
                    _i12.CollaborationInvitationDataEntity>(
              this,
              Invocation.method(
                #getInvitationURL,
                [params],
              ),
            )),
          ) as _i17.Future<
              _i9
              .Either<_i18.Failure, _i12.CollaborationInvitationDataEntity>>);
}

/// A class which mocks [HomeRemoteSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRemoteSource extends _i1.Mock implements _i16.HomeRemoteSource {
  @override
  _i17.Future<List<dynamic>> addNamesToDatabase({String? theName = r''}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNamesToDatabase,
          [],
          {#theName: theName},
        ),
        returnValue: _i17.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub:
            _i17.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i17.Future<List<dynamic>>);

  @override
  _i17.Future<List<dynamic>> getCollaboratorPhrase() => (super.noSuchMethod(
        Invocation.method(
          #getCollaboratorPhrase,
          [],
        ),
        returnValue: _i17.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub:
            _i17.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i17.Future<List<dynamic>>);

  @override
  _i17.Future<List<dynamic>> checkIfTheyHaveACollaboration() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkIfTheyHaveACollaboration,
          [],
        ),
        returnValue: _i17.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub:
            _i17.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i17.Future<List<dynamic>>);

  @override
  _i17.Future<List<dynamic>> checkIfTheyHaveDonePerspectives() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkIfTheyHaveDonePerspectives,
          [],
        ),
        returnValue: _i17.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub:
            _i17.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i17.Future<List<dynamic>>);

  @override
  _i17.Future<List<dynamic>> checkIfTheyHaveCommittedAPurpose() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkIfTheyHaveCommittedAPurpose,
          [],
        ),
        returnValue: _i17.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub:
            _i17.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i17.Future<List<dynamic>>);

  @override
  _i17.Future<_i8.ShareResult> shareCollaborationInvitation(
          String? invitationURL) =>
      (super.noSuchMethod(
        Invocation.method(
          #shareCollaborationInvitation,
          [invitationURL],
        ),
        returnValue: _i17.Future<_i8.ShareResult>.value(_FakeShareResult_6(
          this,
          Invocation.method(
            #shareCollaborationInvitation,
            [invitationURL],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i8.ShareResult>.value(_FakeShareResult_6(
          this,
          Invocation.method(
            #shareCollaborationInvitation,
            [invitationURL],
          ),
        )),
      ) as _i17.Future<_i8.ShareResult>);

  @override
  _i17.Future<_i7.BranchResponse<dynamic>> getInvitationURL() =>
      (super.noSuchMethod(
        Invocation.method(
          #getInvitationURL,
          [],
        ),
        returnValue: _i17.Future<_i7.BranchResponse<dynamic>>.value(
            _FakeBranchResponse_5<dynamic>(
          this,
          Invocation.method(
            #getInvitationURL,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i7.BranchResponse<dynamic>>.value(
                _FakeBranchResponse_5<dynamic>(
          this,
          Invocation.method(
            #getInvitationURL,
            [],
          ),
        )),
      ) as _i17.Future<_i7.BranchResponse<dynamic>>);
}

/// A class which mocks [GetCollaboratorPhrase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCollaboratorPhrase extends _i1.Mock
    implements _i11.GetCollaboratorPhrase {
  @override
  _i10.HomeContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeHomeContract_8(
          this,
          Invocation.getter(#contract),
        ),
        returnValueForMissingStub: _FakeHomeContract_8(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i10.HomeContract);

  @override
  _i17.Future<_i9.Either<_i18.Failure, _i12.CollaboratorPhraseEntity>> call(
          _i19.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i17.Future<
                _i9.Either<_i18.Failure, _i12.CollaboratorPhraseEntity>>.value(
            _FakeEither_7<_i18.Failure, _i12.CollaboratorPhraseEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub: _i17.Future<
                _i9.Either<_i18.Failure, _i12.CollaboratorPhraseEntity>>.value(
            _FakeEither_7<_i18.Failure, _i12.CollaboratorPhraseEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i17
          .Future<_i9.Either<_i18.Failure, _i12.CollaboratorPhraseEntity>>);
}

/// A class which mocks [AddNameToDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddNameToDatabase extends _i1.Mock implements _i11.AddNameToDatabase {
  @override
  _i10.HomeContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeHomeContract_8(
          this,
          Invocation.getter(#contract),
        ),
        returnValueForMissingStub: _FakeHomeContract_8(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i10.HomeContract);

  @override
  _i17.Future<_i9.Either<_i18.Failure, _i12.NameCreationStatusEntity>> call(
          _i19.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i17.Future<
                _i9.Either<_i18.Failure, _i12.NameCreationStatusEntity>>.value(
            _FakeEither_7<_i18.Failure, _i12.NameCreationStatusEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub: _i17.Future<
                _i9.Either<_i18.Failure, _i12.NameCreationStatusEntity>>.value(
            _FakeEither_7<_i18.Failure, _i12.NameCreationStatusEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i17
          .Future<_i9.Either<_i18.Failure, _i12.NameCreationStatusEntity>>);
}

/// A class which mocks [ShareCollaborationInvitation].
///
/// See the documentation for Mockito's code generation for more information.
class MockShareCollaborationInvitation extends _i1.Mock
    implements _i11.ShareCollaborationInvitation {
  @override
  _i10.HomeContract get contract => (super.noSuchMethod(
        Invocation.getter(#contract),
        returnValue: _FakeHomeContract_8(
          this,
          Invocation.getter(#contract),
        ),
        returnValueForMissingStub: _FakeHomeContract_8(
          this,
          Invocation.getter(#contract),
        ),
      ) as _i10.HomeContract);

  @override
  _i17.Future<
      _i9
      .Either<_i18.Failure, _i12.CollaborationInvitationSendStatusEntity>> call(
          String? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i17.Future<
                _i9.Either<_i18.Failure,
                    _i12.CollaborationInvitationSendStatusEntity>>.value(
            _FakeEither_7<_i18.Failure,
                _i12.CollaborationInvitationSendStatusEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub: _i17.Future<
                _i9.Either<_i18.Failure,
                    _i12.CollaborationInvitationSendStatusEntity>>.value(
            _FakeEither_7<_i18.Failure,
                _i12.CollaborationInvitationSendStatusEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i17.Future<
          _i9
          .Either<_i18.Failure, _i12.CollaborationInvitationSendStatusEntity>>);
}

/// A class which mocks [AddNameToDatabaseStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddNameToDatabaseStore extends _i1.Mock
    implements _i20.AddNameToDatabaseStore {
  @override
  _i11.AddNameToDatabase get logic => (super.noSuchMethod(
        Invocation.getter(#logic),
        returnValue: _FakeAddNameToDatabase_9(
          this,
          Invocation.getter(#logic),
        ),
        returnValueForMissingStub: _FakeAddNameToDatabase_9(
          this,
          Invocation.getter(#logic),
        ),
      ) as _i11.AddNameToDatabase);

  @override
  _i12.NameCreationStatusEntity get nameCreationStatus => (super.noSuchMethod(
        Invocation.getter(#nameCreationStatus),
        returnValue: _FakeNameCreationStatusEntity_10(
          this,
          Invocation.getter(#nameCreationStatus),
        ),
        returnValueForMissingStub: _FakeNameCreationStatusEntity_10(
          this,
          Invocation.getter(#nameCreationStatus),
        ),
      ) as _i12.NameCreationStatusEntity);

  @override
  set nameCreationStatus(_i12.NameCreationStatusEntity? _nameCreationStatus) =>
      super.noSuchMethod(
        Invocation.setter(
          #nameCreationStatus,
          _nameCreationStatus,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.BaseFutureStore<_i12.NameCreationStatusEntity> get futureStore =>
      (super.noSuchMethod(
        Invocation.getter(#futureStore),
        returnValue: _FakeBaseFutureStore_11<_i12.NameCreationStatusEntity>(
          this,
          Invocation.getter(#futureStore),
        ),
        returnValueForMissingStub:
            _FakeBaseFutureStore_11<_i12.NameCreationStatusEntity>(
          this,
          Invocation.getter(#futureStore),
        ),
      ) as _i13.BaseFutureStore<_i12.NameCreationStatusEntity>);

  @override
  set futureStore(_i13.BaseFutureStore<_i12.NameCreationStatusEntity>? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #futureStore,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
        returnValueForMissingStub: <Object>[],
      ) as List<Object>);

  @override
  _i21.StoreState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i21.StoreState.initial,
        returnValueForMissingStub: _i21.StoreState.initial,
      ) as _i21.StoreState);

  @override
  set state(_i21.StoreState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
        returnValueForMissingStub: _i22.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  set errorMessage(String? value) => super.noSuchMethod(
        Invocation.setter(
          #errorMessage,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i14.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_12(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeReactiveContext_12(
          this,
          Invocation.getter(#context),
        ),
      ) as _i14.ReactiveContext);

  @override
  void stateOrErrorUpdater(
          _i9.Either<_i18.Failure, _i12.NameCreationStatusEntity>? result) =>
      super.noSuchMethod(
        Invocation.method(
          #stateOrErrorUpdater,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Future<void> call(_i19.NoParams? params) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  String mapFailureToMessage(_i18.Failure? failure) => (super.noSuchMethod(
        Invocation.method(
          #mapFailureToMessage,
          [failure],
        ),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.method(
            #mapFailureToMessage,
            [failure],
          ),
        ),
        returnValueForMissingStub: _i22.dummyValue<String>(
          this,
          Invocation.method(
            #mapFailureToMessage,
            [failure],
          ),
        ),
      ) as String);
}

/// A class which mocks [GetExistingCollaborationsInfoStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetExistingCollaborationsInfoStore extends _i1.Mock
    implements _i23.GetExistingCollaborationsInfoStore {
  @override
  bool get hasACollaboration => (super.noSuchMethod(
        Invocation.getter(#hasACollaboration),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set hasACollaboration(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #hasACollaboration,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasDonePerspectives => (super.noSuchMethod(
        Invocation.getter(#hasDonePerspectives),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set hasDonePerspectives(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #hasDonePerspectives,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasCommittedAPurpose => (super.noSuchMethod(
        Invocation.getter(#hasCommittedAPurpose),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set hasCommittedAPurpose(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #hasCommittedAPurpose,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.GetExistingCollaborationsInfo get logic => (super.noSuchMethod(
        Invocation.getter(#logic),
        returnValue: _FakeGetExistingCollaborationsInfo_13(
          this,
          Invocation.getter(#logic),
        ),
        returnValueForMissingStub: _FakeGetExistingCollaborationsInfo_13(
          this,
          Invocation.getter(#logic),
        ),
      ) as _i11.GetExistingCollaborationsInfo);

  @override
  _i13.BaseFutureStore<_i12.ExistingCollaborationsInfoEntity> get futureStore =>
      (super.noSuchMethod(
        Invocation.getter(#futureStore),
        returnValue:
            _FakeBaseFutureStore_11<_i12.ExistingCollaborationsInfoEntity>(
          this,
          Invocation.getter(#futureStore),
        ),
        returnValueForMissingStub:
            _FakeBaseFutureStore_11<_i12.ExistingCollaborationsInfoEntity>(
          this,
          Invocation.getter(#futureStore),
        ),
      ) as _i13.BaseFutureStore<_i12.ExistingCollaborationsInfoEntity>);

  @override
  set futureStore(
          _i13.BaseFutureStore<_i12.ExistingCollaborationsInfoEntity>? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #futureStore,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i21.StoreState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i21.StoreState.initial,
        returnValueForMissingStub: _i21.StoreState.initial,
      ) as _i21.StoreState);

  @override
  set state(_i21.StoreState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
        returnValueForMissingStub: _i22.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  set errorMessage(String? value) => super.noSuchMethod(
        Invocation.setter(
          #errorMessage,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
        returnValueForMissingStub: <Object>[],
      ) as List<Object>);

  @override
  _i14.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_12(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeReactiveContext_12(
          this,
          Invocation.getter(#context),
        ),
      ) as _i14.ReactiveContext);

  @override
  void stateOrErrorUpdater(
          _i9.Either<_i18.Failure, _i12.ExistingCollaborationsInfoEntity>?
              result) =>
      super.noSuchMethod(
        Invocation.method(
          #stateOrErrorUpdater,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Future<void> call(_i19.NoParams? params) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  String mapFailureToMessage(_i18.Failure? failure) => (super.noSuchMethod(
        Invocation.method(
          #mapFailureToMessage,
          [failure],
        ),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.method(
            #mapFailureToMessage,
            [failure],
          ),
        ),
        returnValueForMissingStub: _i22.dummyValue<String>(
          this,
          Invocation.method(
            #mapFailureToMessage,
            [failure],
          ),
        ),
      ) as String);
}

/// A class which mocks [ShareCollaborationInvitationStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockShareCollaborationInvitationStore extends _i1.Mock
    implements _i24.ShareCollaborationInvitationStore {
  @override
  _i11.ShareCollaborationInvitation get logic => (super.noSuchMethod(
        Invocation.getter(#logic),
        returnValue: _FakeShareCollaborationInvitation_14(
          this,
          Invocation.getter(#logic),
        ),
        returnValueForMissingStub: _FakeShareCollaborationInvitation_14(
          this,
          Invocation.getter(#logic),
        ),
      ) as _i11.ShareCollaborationInvitation);

  @override
  bool get isSent => (super.noSuchMethod(
        Invocation.getter(#isSent),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isSent(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isSent,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.BaseFutureStore<_i12.CollaborationInvitationSendStatusEntity>
      get futureStore => (super.noSuchMethod(
            Invocation.getter(#futureStore),
            returnValue: _FakeBaseFutureStore_11<
                _i12.CollaborationInvitationSendStatusEntity>(
              this,
              Invocation.getter(#futureStore),
            ),
            returnValueForMissingStub: _FakeBaseFutureStore_11<
                _i12.CollaborationInvitationSendStatusEntity>(
              this,
              Invocation.getter(#futureStore),
            ),
          ) as _i13
              .BaseFutureStore<_i12.CollaborationInvitationSendStatusEntity>);

  @override
  set futureStore(
          _i13.BaseFutureStore<_i12.CollaborationInvitationSendStatusEntity>?
              value) =>
      super.noSuchMethod(
        Invocation.setter(
          #futureStore,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i21.StoreState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i21.StoreState.initial,
        returnValueForMissingStub: _i21.StoreState.initial,
      ) as _i21.StoreState);

  @override
  set state(_i21.StoreState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
        returnValueForMissingStub: _i22.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  set errorMessage(String? value) => super.noSuchMethod(
        Invocation.setter(
          #errorMessage,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
        returnValueForMissingStub: <Object>[],
      ) as List<Object>);

  @override
  _i14.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_12(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeReactiveContext_12(
          this,
          Invocation.getter(#context),
        ),
      ) as _i14.ReactiveContext);

  @override
  void stateOrErrorUpdater(
          _i9.Either<_i18.Failure,
                  _i12.CollaborationInvitationSendStatusEntity>?
              result) =>
      super.noSuchMethod(
        Invocation.method(
          #stateOrErrorUpdater,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Future<void> call(String? params) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  String mapFailureToMessage(_i18.Failure? failure) => (super.noSuchMethod(
        Invocation.method(
          #mapFailureToMessage,
          [failure],
        ),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.method(
            #mapFailureToMessage,
            [failure],
          ),
        ),
        returnValueForMissingStub: _i22.dummyValue<String>(
          this,
          Invocation.method(
            #mapFailureToMessage,
            [failure],
          ),
        ),
      ) as String);
}

/// A class which mocks [GetCollaboratorPhraseStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCollaboratorPhraseStore extends _i1.Mock
    implements _i25.GetCollaboratorPhraseStore {
  @override
  _i11.GetCollaboratorPhrase get logic => (super.noSuchMethod(
        Invocation.getter(#logic),
        returnValue: _FakeGetCollaboratorPhrase_15(
          this,
          Invocation.getter(#logic),
        ),
        returnValueForMissingStub: _FakeGetCollaboratorPhrase_15(
          this,
          Invocation.getter(#logic),
        ),
      ) as _i11.GetCollaboratorPhrase);

  @override
  _i12.CollaboratorPhraseEntity get collaboratorPhraseEntity =>
      (super.noSuchMethod(
        Invocation.getter(#collaboratorPhraseEntity),
        returnValue: _FakeCollaboratorPhraseEntity_16(
          this,
          Invocation.getter(#collaboratorPhraseEntity),
        ),
        returnValueForMissingStub: _FakeCollaboratorPhraseEntity_16(
          this,
          Invocation.getter(#collaboratorPhraseEntity),
        ),
      ) as _i12.CollaboratorPhraseEntity);

  @override
  set collaboratorPhraseEntity(
          _i12.CollaboratorPhraseEntity? _collaboratorPhraseEntity) =>
      super.noSuchMethod(
        Invocation.setter(
          #collaboratorPhraseEntity,
          _collaboratorPhraseEntity,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.BaseFutureStore<_i12.CollaboratorPhraseEntity> get futureStore =>
      (super.noSuchMethod(
        Invocation.getter(#futureStore),
        returnValue: _FakeBaseFutureStore_11<_i12.CollaboratorPhraseEntity>(
          this,
          Invocation.getter(#futureStore),
        ),
        returnValueForMissingStub:
            _FakeBaseFutureStore_11<_i12.CollaboratorPhraseEntity>(
          this,
          Invocation.getter(#futureStore),
        ),
      ) as _i13.BaseFutureStore<_i12.CollaboratorPhraseEntity>);

  @override
  set futureStore(
          _i13.BaseFutureStore<_i12.CollaboratorPhraseEntity>? _futureStore) =>
      super.noSuchMethod(
        Invocation.setter(
          #futureStore,
          _futureStore,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get collaboratorPhrase => (super.noSuchMethod(
        Invocation.getter(#collaboratorPhrase),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#collaboratorPhrase),
        ),
        returnValueForMissingStub: _i22.dummyValue<String>(
          this,
          Invocation.getter(#collaboratorPhrase),
        ),
      ) as String);

  @override
  set collaboratorPhrase(String? value) => super.noSuchMethod(
        Invocation.setter(
          #collaboratorPhrase,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i21.StoreState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i21.StoreState.initial,
        returnValueForMissingStub: _i21.StoreState.initial,
      ) as _i21.StoreState);

  @override
  set state(_i21.StoreState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
        returnValueForMissingStub: _i22.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  set errorMessage(String? value) => super.noSuchMethod(
        Invocation.setter(
          #errorMessage,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
        returnValueForMissingStub: <Object>[],
      ) as List<Object>);

  @override
  _i14.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_12(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeReactiveContext_12(
          this,
          Invocation.getter(#context),
        ),
      ) as _i14.ReactiveContext);

  @override
  void stateOrErrorUpdater(
          _i9.Either<_i18.Failure, _i12.CollaboratorPhraseEntity>? result) =>
      super.noSuchMethod(
        Invocation.method(
          #stateOrErrorUpdater,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Future<void> call(_i19.NoParams? params) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  String mapFailureToMessage(_i18.Failure? failure) => (super.noSuchMethod(
        Invocation.method(
          #mapFailureToMessage,
          [failure],
        ),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.method(
            #mapFailureToMessage,
            [failure],
          ),
        ),
        returnValueForMissingStub: _i22.dummyValue<String>(
          this,
          Invocation.method(
            #mapFailureToMessage,
            [failure],
          ),
        ),
      ) as String);
}

/// A class which mocks [HomeScreenWidgetsCoordinator].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeScreenWidgetsCoordinator extends _i1.Mock
    implements _i26.HomeScreenWidgetsCoordinator {
  @override
  _i15.TimeAlignmentModelCoordinator get timeModel => (super.noSuchMethod(
        Invocation.getter(#timeModel),
        returnValue: _FakeTimeAlignmentModelCoordinator_17(
          this,
          Invocation.getter(#timeModel),
        ),
        returnValueForMissingStub: _FakeTimeAlignmentModelCoordinator_17(
          this,
          Invocation.getter(#timeModel),
        ),
      ) as _i15.TimeAlignmentModelCoordinator);

  @override
  _i15.NokhteBlurStore get nokhteBlur => (super.noSuchMethod(
        Invocation.getter(#nokhteBlur),
        returnValue: _FakeNokhteBlurStore_18(
          this,
          Invocation.getter(#nokhteBlur),
        ),
        returnValueForMissingStub: _FakeNokhteBlurStore_18(
          this,
          Invocation.getter(#nokhteBlur),
        ),
      ) as _i15.NokhteBlurStore);

  @override
  _i15.BeachWavesStore get beachWaves => (super.noSuchMethod(
        Invocation.getter(#beachWaves),
        returnValue: _FakeBeachWavesStore_19(
          this,
          Invocation.getter(#beachWaves),
        ),
        returnValueForMissingStub: _FakeBeachWavesStore_19(
          this,
          Invocation.getter(#beachWaves),
        ),
      ) as _i15.BeachWavesStore);

  @override
  _i15.WifiDisconnectOverlayStore get wifiDisconnectOverlay =>
      (super.noSuchMethod(
        Invocation.getter(#wifiDisconnectOverlay),
        returnValue: _FakeWifiDisconnectOverlayStore_20(
          this,
          Invocation.getter(#wifiDisconnectOverlay),
        ),
        returnValueForMissingStub: _FakeWifiDisconnectOverlayStore_20(
          this,
          Invocation.getter(#wifiDisconnectOverlay),
        ),
      ) as _i15.WifiDisconnectOverlayStore);

  @override
  _i15.GestureCrossStore get gestureCross => (super.noSuchMethod(
        Invocation.getter(#gestureCross),
        returnValue: _FakeGestureCrossStore_21(
          this,
          Invocation.getter(#gestureCross),
        ),
        returnValueForMissingStub: _FakeGestureCrossStore_21(
          this,
          Invocation.getter(#gestureCross),
        ),
      ) as _i15.GestureCrossStore);

  @override
  _i15.SmartTextStore get primarySmartText => (super.noSuchMethod(
        Invocation.getter(#primarySmartText),
        returnValue: _FakeSmartTextStore_22(
          this,
          Invocation.getter(#primarySmartText),
        ),
        returnValueForMissingStub: _FakeSmartTextStore_22(
          this,
          Invocation.getter(#primarySmartText),
        ),
      ) as _i15.SmartTextStore);

  @override
  _i15.SmartTextStore get secondarySmartText => (super.noSuchMethod(
        Invocation.getter(#secondarySmartText),
        returnValue: _FakeSmartTextStore_22(
          this,
          Invocation.getter(#secondarySmartText),
        ),
        returnValueForMissingStub: _FakeSmartTextStore_22(
          this,
          Invocation.getter(#secondarySmartText),
        ),
      ) as _i15.SmartTextStore);

  @override
  _i15.GradientTreeNodeStore get gradientTreeNode => (super.noSuchMethod(
        Invocation.getter(#gradientTreeNode),
        returnValue: _FakeGradientTreeNodeStore_23(
          this,
          Invocation.getter(#gradientTreeNode),
        ),
        returnValueForMissingStub: _FakeGradientTreeNodeStore_23(
          this,
          Invocation.getter(#gradientTreeNode),
        ),
      ) as _i15.GradientTreeNodeStore);

  @override
  bool get clockAnimationHasNotStarted => (super.noSuchMethod(
        Invocation.getter(#clockAnimationHasNotStarted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set clockAnimationHasNotStarted(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #clockAnimationHasNotStarted,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get clockIsVisible => (super.noSuchMethod(
        Invocation.getter(#clockIsVisible),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set clockIsVisible(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #clockIsVisible,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isDisconnected => (super.noSuchMethod(
        Invocation.getter(#isDisconnected),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isDisconnected(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isDisconnected,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasInitiatedBlur => (super.noSuchMethod(
        Invocation.getter(#hasInitiatedBlur),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set hasInitiatedBlur(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #hasInitiatedBlur,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isDoubleTriggeringWindDown => (super.noSuchMethod(
        Invocation.getter(#isDoubleTriggeringWindDown),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isDoubleTriggeringWindDown(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isDoubleTriggeringWindDown,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
        returnValueForMissingStub: <Object>[],
      ) as List<Object>);

  @override
  _i14.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_12(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeReactiveContext_12(
          this,
          Invocation.getter(#context),
        ),
      ) as _i14.ReactiveContext);

  @override
  dynamic initReactors({required Function? onGradientTreeNodeTap}) =>
      super.noSuchMethod(
        Invocation.method(
          #initReactors,
          [],
          {#onGradientTreeNodeTap: onGradientTreeNodeTap},
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic gradientTreeNodeTapReactor(Function? onGradientTreeNodeTap) =>
      super.noSuchMethod(
        Invocation.method(
          #gradientTreeNodeTapReactor,
          [onGradientTreeNodeTap],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic onAvailabilitySectorMovieStatusFinished(_i27.MovieStatus? p0) =>
      super.noSuchMethod(
        Invocation.method(
          #onAvailabilitySectorMovieStatusFinished,
          [p0],
        ),
        returnValueForMissingStub: null,
      );
}
