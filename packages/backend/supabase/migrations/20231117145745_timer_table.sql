create table
  public.timer_information (
    id bigint generated by default as identity,
    collaborator_one_uid uuid not null,
    collaborator_two_uid uuid not null,
    collaborator_one_is_online boolean not null default false,
    collaborator_two_is_online boolean not null default false,
    created_at timestamp with time zone not null default now(),
    timer_is_running boolean not null default false,
    time_remaining_in_milliseconds double precision not null,
    constraint timer_information_pkey primary key (id),
    constraint timer_information_collaborator_one_uid_fkey foreign key (collaborator_one_uid) references auth.users (id),
    constraint timer_information_collaborator_two_uid_fkey foreign key (collaborator_two_uid) references auth.users (id)
  ) tablespace pg_default;


alter table "public"."timer_information" enable row level security;

create policy "Can only Read Timers They Are Collaborators Over"
on "public"."timer_information"
as permissive
for select
to authenticated
using (((auth.uid() = collaborator_one_uid) OR (auth.uid() = collaborator_two_uid)));


create policy "Can only Update Timers They Are Collaborators Over"
on "public"."timer_information"
as permissive
for update
to authenticated
using (((auth.uid() = collaborator_one_uid) OR (auth.uid() = collaborator_two_uid)));


create policy "enable insert for authenticated users"
on "public"."timer_information"
as permissive
for insert
to authenticated
with check (true);

alter publication supabase_realtime
add
    table public.timer_information;