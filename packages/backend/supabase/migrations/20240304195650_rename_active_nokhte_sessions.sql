
drop policy "DELETE: they can delete their row" on "public"."active_nokhte_sessions";

drop policy "SELECT: They can read their row" on "public"."active_nokhte_sessions";

drop policy "UPDATE: They can only update their row" on "public"."active_nokhte_sessions";

revoke delete on table "public"."active_nokhte_sessions" from "anon";

revoke insert on table "public"."active_nokhte_sessions" from "anon";

revoke references on table "public"."active_nokhte_sessions" from "anon";

revoke select on table "public"."active_nokhte_sessions" from "anon";

revoke trigger on table "public"."active_nokhte_sessions" from "anon";

revoke truncate on table "public"."active_nokhte_sessions" from "anon";

revoke update on table "public"."active_nokhte_sessions" from "anon";

revoke delete on table "public"."active_nokhte_sessions" from "authenticated";

revoke insert on table "public"."active_nokhte_sessions" from "authenticated";

revoke references on table "public"."active_nokhte_sessions" from "authenticated";

revoke select on table "public"."active_nokhte_sessions" from "authenticated";

revoke trigger on table "public"."active_nokhte_sessions" from "authenticated";

revoke truncate on table "public"."active_nokhte_sessions" from "authenticated";

revoke update on table "public"."active_nokhte_sessions" from "authenticated";

revoke delete on table "public"."active_nokhte_sessions" from "service_role";

revoke insert on table "public"."active_nokhte_sessions" from "service_role";

revoke references on table "public"."active_nokhte_sessions" from "service_role";

revoke select on table "public"."active_nokhte_sessions" from "service_role";

revoke trigger on table "public"."active_nokhte_sessions" from "service_role";

revoke truncate on table "public"."active_nokhte_sessions" from "service_role";

revoke update on table "public"."active_nokhte_sessions" from "service_role";

alter table "public"."active_nokhte_sessions" drop constraint "active_nokhte_sessions_collaborator_uids_key";

alter table "public"."active_nokhte_sessions" drop constraint "active_nokhte_sessions_current_phases_check";

alter table "public"."active_nokhte_sessions" drop constraint "active_nokhte_sessions_is_online_check";

alter table "public"."active_nokhte_sessions" drop constraint "active_nokhte_sessions_meeting_uid_fkey";

alter table "public"."active_nokhte_sessions" drop constraint "active_nokhte_sessions_speaker_spotlight_fkey";

alter table "public"."active_nokhte_sessions" drop constraint "nokhte_sessions_pkey";

drop index if exists "public"."active_nokhte_sessions_collaborator_uids_key";

drop index if exists "public"."nokhte_sessions_pkey";

drop table "public"."active_nokhte_sessions";

create table "public"."active_irl_nokhte_sessions" (
    "id" bigint generated by default as identity not null,
    "meeting_uid" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "current_phases" real[] not null default '{1,1}'::real[],
    "is_online" boolean[] not null default '{f,f}'::boolean[],
    "speaker_spotlight" uuid,
    "session_metadata" jsonb[] not null default '{}'::jsonb[],
    "metadata_index" smallint not null default '0'::smallint,
    "collaborator_uids" uuid[] not null
);


alter table "public"."active_irl_nokhte_sessions" enable row level security;

CREATE UNIQUE INDEX active_nokhte_sessions_collaborator_uids_key ON public.active_irl_nokhte_sessions USING btree (collaborator_uids);

CREATE UNIQUE INDEX nokhte_sessions_pkey ON public.active_irl_nokhte_sessions USING btree (id);

alter table "public"."active_irl_nokhte_sessions" add constraint "nokhte_sessions_pkey" PRIMARY KEY using index "nokhte_sessions_pkey";

alter table "public"."active_irl_nokhte_sessions" add constraint "active_irl_nokhte_sessions_meeting_uid_fkey" FOREIGN KEY (meeting_uid) REFERENCES auth.users(id) not valid;

alter table "public"."active_irl_nokhte_sessions" validate constraint "active_irl_nokhte_sessions_meeting_uid_fkey";

alter table "public"."active_irl_nokhte_sessions" add constraint "active_irl_nokhte_sessions_speaker_spotlight_fkey" FOREIGN KEY (speaker_spotlight) REFERENCES auth.users(id) not valid;

alter table "public"."active_irl_nokhte_sessions" validate constraint "active_irl_nokhte_sessions_speaker_spotlight_fkey";

alter table "public"."active_irl_nokhte_sessions" add constraint "active_nokhte_sessions_collaborator_uids_key" UNIQUE using index "active_nokhte_sessions_collaborator_uids_key";

alter table "public"."active_irl_nokhte_sessions" add constraint "active_nokhte_sessions_current_phases_check" CHECK ((array_length(current_phases, 1) = 2)) not valid;

alter table "public"."active_irl_nokhte_sessions" validate constraint "active_nokhte_sessions_current_phases_check";

alter table "public"."active_irl_nokhte_sessions" add constraint "active_nokhte_sessions_is_online_check" CHECK ((array_length(is_online, 1) = 2)) not valid;

alter table "public"."active_irl_nokhte_sessions" validate constraint "active_nokhte_sessions_is_online_check";

grant delete on table "public"."active_irl_nokhte_sessions" to "anon";

grant insert on table "public"."active_irl_nokhte_sessions" to "anon";

grant references on table "public"."active_irl_nokhte_sessions" to "anon";

grant select on table "public"."active_irl_nokhte_sessions" to "anon";

grant trigger on table "public"."active_irl_nokhte_sessions" to "anon";

grant truncate on table "public"."active_irl_nokhte_sessions" to "anon";

grant update on table "public"."active_irl_nokhte_sessions" to "anon";

grant delete on table "public"."active_irl_nokhte_sessions" to "authenticated";

grant insert on table "public"."active_irl_nokhte_sessions" to "authenticated";

grant references on table "public"."active_irl_nokhte_sessions" to "authenticated";

grant select on table "public"."active_irl_nokhte_sessions" to "authenticated";

grant trigger on table "public"."active_irl_nokhte_sessions" to "authenticated";

grant truncate on table "public"."active_irl_nokhte_sessions" to "authenticated";

grant update on table "public"."active_irl_nokhte_sessions" to "authenticated";

grant delete on table "public"."active_irl_nokhte_sessions" to "service_role";

grant insert on table "public"."active_irl_nokhte_sessions" to "service_role";

grant references on table "public"."active_irl_nokhte_sessions" to "service_role";

grant select on table "public"."active_irl_nokhte_sessions" to "service_role";

grant trigger on table "public"."active_irl_nokhte_sessions" to "service_role";

grant truncate on table "public"."active_irl_nokhte_sessions" to "service_role";

grant update on table "public"."active_irl_nokhte_sessions" to "service_role";

create policy "DELETE: they can delete their row"
on "public"."active_irl_nokhte_sessions"
as permissive
for delete
to authenticated
using ((auth.uid() = ANY (collaborator_uids)));


create policy "SELECT: They can read their row"
on "public"."active_irl_nokhte_sessions"
as permissive
for select
to authenticated
using ((auth.uid() = ANY (collaborator_uids)));


create policy "UPDATE: They can only update their row"
on "public"."active_irl_nokhte_sessions"
as permissive
for update
to authenticated
using ((auth.uid() = ANY (collaborator_uids)))
with check ((auth.uid() = ANY (collaborator_uids)));

